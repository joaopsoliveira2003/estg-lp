{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Laborat\'F3rio de Programa\'E7\'E3o  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Grupo 2 \par
}}Laborat\'F3rio de Programa\'E7\'E3o}
{\comment Generated by doxygen1.9.3.}
{\creatim \yr2022\mo1\dy14\hr17\min52\sec2}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Laborat\'F3rio de Programa\'E7\'E3o}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version Grupo 2\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Fri Jan 14 2022 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Laborat\'F3rio de Programa\'E7\'E3o\par \pard\plain 
{\tc \v Laborat\'F3rio de Programa\'E7\'E3o}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compilar e Executar o Programa: gcc .\\main.c .\\administrador.c .\\shopping.c .\\colors.c .\\queries.c .\\clientes.c .\\util.c -o main && .\\main \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Index\par \pard\plain 
{\tc \v Data Structure Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Data Structures\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the data structures with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Artigos} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Clientes} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Encomendas} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Runtime} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b administrador.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b clientes.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b colors.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b data.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b definitions.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b queries.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b shopping.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b util.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAER \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Documentation{\tc \v Data Structure Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Artigos Struct Reference\par \pard\plain 
{\tc\tcl2 \v Artigos}
{\xe \v Artigos}
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
\par
{
{\f2 #include <definitions.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b codArtigo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b artigo} [{\b SC}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b maoObra}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b custosFixos}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b margemLucro}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tamanhos} [2]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b defaultPreco}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b incrementoPreco}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b estado}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tamanhoPreco} [15][2]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 20} of file {\b definitions.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v artigo\:Artigos}
{\xe \v Artigos\:artigo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char artigo[{\b SC}]}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b definitions.h}.}\par
}
{\xe \v codArtigo\:Artigos}
{\xe \v Artigos\:codArtigo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int codArtigo}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b definitions.h}.}\par
}
{\xe \v custosFixos\:Artigos}
{\xe \v Artigos\:custosFixos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double custosFixos}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b definitions.h}.}\par
}
{\xe \v defaultPreco\:Artigos}
{\xe \v Artigos\:defaultPreco}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double defaultPreco}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b definitions.h}.}\par
}
{\xe \v estado\:Artigos}
{\xe \v Artigos\:estado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool estado}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 29} of file {\b definitions.h}.}\par
}
{\xe \v incrementoPreco\:Artigos}
{\xe \v Artigos\:incrementoPreco}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double incrementoPreco}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 28} of file {\b definitions.h}.}\par
}
{\xe \v maoObra\:Artigos}
{\xe \v Artigos\:maoObra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double maoObra}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b definitions.h}.}\par
}
{\xe \v margemLucro\:Artigos}
{\xe \v Artigos\:margemLucro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double margemLucro}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b definitions.h}.}\par
}
{\xe \v tamanhoPreco\:Artigos}
{\xe \v Artigos\:tamanhoPreco}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double tamanhoPreco[15][2]}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 30} of file {\b definitions.h}.}\par
}
{\xe \v tamanhos\:Artigos}
{\xe \v Artigos\:tamanhos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int tamanhos[2]}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b definitions.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b definitions.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Clientes Struct Reference\par \pard\plain 
{\tc\tcl2 \v Clientes}
{\xe \v Clientes}
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
\par
{
{\f2 #include <definitions.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b codCliente}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b nome} [{\b SC}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nif}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b pais} [{\b SC}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b estado}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 11} of file {\b definitions.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v codCliente\:Clientes}
{\xe \v Clientes\:codCliente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int codCliente}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b definitions.h}.}\par
}
{\xe \v estado\:Clientes}
{\xe \v Clientes\:estado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool estado}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b definitions.h}.}\par
}
{\xe \v nif\:Clientes}
{\xe \v Clientes\:nif}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int nif}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b definitions.h}.}\par
}
{\xe \v nome\:Clientes}
{\xe \v Clientes\:nome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char nome[{\b SC}]}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b definitions.h}.}\par
}
{\xe \v pais\:Clientes}
{\xe \v Clientes\:pais}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char pais[{\b SC}]}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b definitions.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b definitions.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Encomendas Struct Reference\par \pard\plain 
{\tc\tcl2 \v Encomendas}
{\xe \v Encomendas}
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
\par
{
{\f2 #include <definitions.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b codEncomenda}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b codCliente}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b codArtigo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tamanho}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b horaminuto}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dia}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ano}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b quantidade}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b total}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b estado}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 33} of file {\b definitions.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v ano\:Encomendas}
{\xe \v Encomendas\:ano}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ano}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 41} of file {\b definitions.h}.}\par
}
{\xe \v codArtigo\:Encomendas}
{\xe \v Encomendas\:codArtigo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int codArtigo}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 36} of file {\b definitions.h}.}\par
}
{\xe \v codCliente\:Encomendas}
{\xe \v Encomendas\:codCliente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int codCliente}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 35} of file {\b definitions.h}.}\par
}
{\xe \v codEncomenda\:Encomendas}
{\xe \v Encomendas\:codEncomenda}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int codEncomenda}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 34} of file {\b definitions.h}.}\par
}
{\xe \v dia\:Encomendas}
{\xe \v Encomendas\:dia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dia}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 39} of file {\b definitions.h}.}\par
}
{\xe \v estado\:Encomendas}
{\xe \v Encomendas\:estado}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool estado}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 44} of file {\b definitions.h}.}\par
}
{\xe \v horaminuto\:Encomendas}
{\xe \v Encomendas\:horaminuto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int horaminuto}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 38} of file {\b definitions.h}.}\par
}
{\xe \v mes\:Encomendas}
{\xe \v Encomendas\:mes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int mes}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b definitions.h}.}\par
}
{\xe \v quantidade\:Encomendas}
{\xe \v Encomendas\:quantidade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int quantidade}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 42} of file {\b definitions.h}.}\par
}
{\xe \v tamanho\:Encomendas}
{\xe \v Encomendas\:tamanho}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int tamanho}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 37} of file {\b definitions.h}.}\par
}
{\xe \v total\:Encomendas}
{\xe \v Encomendas\:total}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double total}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 43} of file {\b definitions.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b definitions.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Runtime Struct Reference\par \pard\plain 
{\tc\tcl2 \v Runtime}
{\xe \v Runtime}
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
\par
{
{\f2 #include <definitions.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b currentClient}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b stringDesconto} [7]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b percentageDesconto}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 47} of file {\b definitions.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v currentClient\:Runtime}
{\xe \v Runtime\:currentClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int currentClient}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 48} of file {\b definitions.h}.}\par
}
{\xe \v percentageDesconto\:Runtime}
{\xe \v Runtime\:percentageDesconto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double percentageDesconto}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 50} of file {\b definitions.h}.}\par
}
{\xe \v stringDesconto\:Runtime}
{\xe \v Runtime\:stringDesconto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char stringDesconto[7]}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 49} of file {\b definitions.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b definitions.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
administrador.c File Reference\par \pard\plain 
{\tc\tcl2 \v administrador.c}
{\xe \v administrador.c}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <stdbool.h>}\par
{\f2 #include <unistd.h>}\par
{\f2 #include "definitions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addArtigo} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite adicionar um artigo. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateArtigo} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de atualiza\'E7\'E3o de artigo e os seus valores. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateDesconto} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de atualiza\'E7\'E3o do valor e c\'F3digo de desconto. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v addArtigo\:administrador.c}
{\xe \v administrador.c\:addArtigo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void addArtigo ()}}
\par
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite adicionar um artigo. }}\par
{
Definition at line {\b 12} of file {\b administrador.c}.}\par
}
{\xe \v updateArtigo\:administrador.c}
{\xe \v administrador.c\:updateArtigo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updateArtigo ()}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de atualiza\'E7\'E3o de artigo e os seus valores. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
artigoToUpdate - Artigo a atualizar \par
opcao - Campo a alterar \par
novoXXX - Novo valor a ser atribuido \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'96 Recalcula o pre\'E7o de todos os artigos de acordo com os novos valores\par
}}}{
Definition at line {\b 101} of file {\b administrador.c}.}\par
}
{\xe \v updateDesconto\:administrador.c}
{\xe \v administrador.c\:updateDesconto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updateDesconto ()}}
\par
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de atualiza\'E7\'E3o do valor e c\'F3digo de desconto. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
runtime->percentageDesconto - Percentagem de desconto \par
runtime->stringDesconto - C\'F3digo de desconto \par
}}}{
Definition at line {\b 332} of file {\b administrador.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
administrador.c\par \pard\plain 
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <string.h>}\par
00003 {\cf21 #include <stdbool.h>}\par
00004 {\cf21 #include <unistd.h>}\par
00005 \par
00006 {\cf21 #include "definitions.h"}\par
00007 \par
00008 {\cf21 #pragma region AddArtigo}\par
00012 {\cf18 void} addArtigo()\par
00013 \{\par
00014     reallocStruct(1);\par
00015     cyan(); printf({\cf22 "\\n--------------- Novo Artigo ---------------\\n"}); white();\par
00016     {\cf19 do}\par
00017     \{\par
00018         printf({\cf22 "\\nC\'F3digo: "});\par
00019         scanf({\cf22 "%d"}, &artigo[NA].codArtigo);\par
00020     \} {\cf19 while} (!availableForOperation(4, artigo[NA].codArtigo, 0));\par
00021 \par
00022     {\cf19 do} \{\par
00023         printf({\cf22 "\\nNome do Artigo: "});\par
00024         scanf({\cf22 "%s"}, artigo[NA].artigo);\par
00025     \} {\cf19 while} (!checkString(artigo[NA].artigo));\par
00026 \par
00027     {\cf19 do} \{\par
00028         printf({\cf22 "\\nM\'E3o de Obra (em \'80): "});\par
00029         scanf({\cf22 " %lf"}, &artigo[NA].maoObra);\par
00030     \} {\cf19 while} (!checkNumber(artigo[NA].maoObra));\par
00031 \par
00032     {\cf19 do} \{\par
00033         printf({\cf22 "\\nCustos Fixos (em \'80): "});\par
00034         scanf({\cf22 " %lf"}, &artigo[NA].custosFixos);\par
00035     \} {\cf19 while} (!checkNumber(artigo[NA].custosFixos));\par
00036 \par
00037     {\cf19 do} \{\par
00038         printf({\cf22 "\\nMargem de Lucro (em \'80): "});\par
00039         scanf({\cf22 " %lf"}, &artigo[NA].margemLucro);\par
00040     \} {\cf19 while} (!checkNumber(artigo[NA].margemLucro));\par
00041 \par
00042     {\cf19 do} \{\par
00043         printf({\cf22 "\\nIncremento de preco dos tamanho (em \'80): "});\par
00044         scanf({\cf22 " %lf"}, &artigo[NA].incrementoPreco);\par
00045     \} {\cf19 while} (!checkNumber(artigo[NA].incrementoPreco));\par
00046     yellow(); printf({\cf22 "\\n[!] Caso pretenda alterar um pre\'E7o especifico de um tamanho, \\n"} \\\par
00047     {\cf22 "deve alterar o pre\'E7o do incremento manualmente (Op\'E7\'E3o 51) [!]\\n"}); white();\par
00048     sleep(1);\par
00049 \par
00050     artigo[NA].defaultPreco = artigo[NA].maoObra + artigo[NA].custosFixos + artigo[NA].margemLucro;\par
00051 \par
00052     printf({\cf22 "\\nPretende alterar os tamanhos disponiveis? (s/N)\\n> "});\par
00053     {\cf18 char} opcao;\par
00054     scanf({\cf22 " %c"}, &opcao);\par
00055     {\cf19 if} (opcao == {\cf23 's'} || opcao == {\cf23 'S'})\par
00056     \{\par
00057         {\cf19 do} \{\par
00058             printf({\cf22 "\\nTamanho Inicial: "});\par
00059             scanf({\cf22 " %d"}, &artigo[NA].tamanhos[0]);\par
00060         \} {\cf19 while} (!checkNumber(artigo[NA].tamanhos[0]));\par
00061 \par
00062         {\cf19 do} \{\par
00063             printf({\cf22 "\\nTamanho Final: "});\par
00064             scanf({\cf22 " %d"}, &artigo[NA].tamanhos[1]);\par
00065             {\cf19 if} (artigo[NA].tamanhos[1] < artigo[NA].tamanhos[0])\par
00066             \{\par
00067                 red(); printf({\cf22 "\\n[!] Tamanho final inferior ao inicial! [!]\\n"}); white();\par
00068             \}\par
00069         \} {\cf19 while} (!checkNumber(artigo[NA].tamanhos[1]) || artigo[NA].tamanhos[1] < artigo[NA].tamanhos[0]);\par
00070     \}\par
00071     {\cf19 else}\par
00072     \{\par
00073         artigo[NA].tamanhos[0] = 34;\par
00074         artigo[NA].tamanhos[1] = 48;\par
00075     \}\par
00076 \par
00077     {\cf18 int} i = 0;\par
00078     {\cf19 for}({\cf18 int} tam = artigo[NA].tamanhos[0]; tam <= artigo[NA].tamanhos[1]; tam++)\par
00079     \{\par
00080         artigo[NA].tamanhoPreco[i][0] = artigo[NA].tamanhos[0] + i;\par
00081         artigo[NA].tamanhoPreco[i][1] = artigo[NA].defaultPreco;\par
00082         artigo[NA].defaultPreco += artigo[NA].incrementoPreco;\par
00083         i++;\par
00084     \}\par
00085 \par
00086     artigo[NA].estado = {\cf17 true};\par
00087 \par
00088     green(); printf({\cf22 "\\n[!] Artigo adicionado com sucesso [!]"}); white();\par
00089 \par
00090     pressEnter({\cf17 true});\par
00091 \}\par
00092 {\cf21 #pragma endregion}\par
00093 \par
00094 {\cf21 #pragma region UpdateArtigo}\par
00101 {\cf18 void} updateArtigo()\par
00102 \{\par
00103     {\cf19 if} (NA == -1)\par
00104     \{\par
00105         red(); printf({\cf22 "\\n[!] N\'E3o existem artigos para atualizar! [!]"}); white();\par
00106         pressEnter({\cf17 true});\par
00107         {\cf19 return};\par
00108     \}\par
00109     cyan(); printf({\cf22 "\\n------------------------ Artigos ------------------------\\n"}); white();\par
00110     {\cf19 for} ({\cf18 int} art = 0; art <= NA; art++)\par
00111     \{\par
00112         printf({\cf22 "Artigo: %s\\n\\t| C\'F3digo: %d\\n\\n"}, artigo[art].artigo, artigo[art].codArtigo);\par
00113     \}\par
00114 \par
00115     {\cf18 int} artigoToUpdate;\par
00116     {\cf19 do}\par
00117     \{\par
00118         printf({\cf22 "\\nArtigo a atualizar (C\'F3digo): "});\par
00119         scanf({\cf22 "%d"}, &artigoToUpdate);\par
00120     \} {\cf19 while} (!availableForOperation(2, artigoToUpdate, 0));\par
00121     \par
00122     artigoToUpdate = getArtigoIndex(artigoToUpdate);\par
00123 \par
00124     {\cf18 int} opcao;\par
00125     {\cf19 do}\par
00126     \{\par
00127         yellow(); printf({\cf22 "\\n-------------------- Alterar %s"}, getArtigoName(artigoToUpdate)); printf({\cf22 " --------------------\\n"}); white();\par
00128         printf({\cf22 "  [1] - Alterar Nome\\n"});\par
00129         printf({\cf22 "  [2] - Alterar M\'E3o de Obra\\n"});\par
00130         printf({\cf22 "  [3] - Alterar Margem de Lucro\\n"});\par
00131         printf({\cf22 "  [4] - Alterar Pre\'E7o por Defeito\\n"});\par
00132         printf({\cf22 "  [5] - Alterar Pre\'E7o por Tamanho\\n"});\par
00133         printf({\cf22 "  [6] - Alterar Estado\\n"});\par
00134         printf({\cf22 "  [7] - Alterar C\'F3digo\\n"});\par
00135         bold(); printf({\cf22 "\\n  [0] - Voltar ao Menu\\n"}); white();\par
00136 \par
00137         printf({\cf22 "\\nOpc\'E3o: "});\par
00138         scanf({\cf22 "%d"}, &opcao);\par
00139 \par
00140         {\cf18 int} tamanhoAlterar, codAntigo;\par
00141         {\cf18 float} novoPreco;\par
00142         {\cf18 int} novoCodigo;\par
00143         {\cf18 bool} flag;\par
00144         {\cf18 char} novoNome[SC];\par
00145 \par
00146         {\cf17 enum} menuUpdate \{\par
00147             updateNome = 1,\par
00148             updateMaoObra = 2,\par
00149             updateMargemLucro = 3,\par
00150             updatePrecoDefault = 4,\par
00151             updatePrecoTamanho = 5,\par
00152             updateEstado = 6,\par
00153             updateCodigo = 7,\par
00154             updateIncremento = 8,\par
00155             voltar = 0\par
00156         \};\par
00157 \par
00158         {\cf19 switch} (opcao)\par
00159         \{\par
00160             {\cf19 case} updateNome:\par
00161 \par
00162                 {\cf19 do} \{\par
00163                     printf({\cf22 "Novo Nome: "});\par
00164                     scanf({\cf22 "%s"}, novoNome);\par
00165                 \} {\cf19 while} (!checkString(novoNome));\par
00166                 strcpy(artigo[artigoToUpdate].artigo, novoNome);\par
00167 \par
00168                 green(); printf({\cf22 "\\n[!] Nome do Artigo [%s] alterado com sucesso [!]\\n"}, \\\par
00169                 artigo[artigoToUpdate].artigo); white();\par
00170                 {\cf19 break};\par
00171 \par
00172             {\cf19 case} updateMaoObra:\par
00173                 printf({\cf22 "\\nPreco atual da m\'E3o de obra [%0.2f\'80]: "}, artigo[artigoToUpdate].maoObra);\par
00174 \par
00175                 {\cf19 do} \{\par
00176                     printf({\cf22 "\\nNova M\'E3o de Obra: "});\par
00177                     scanf({\cf22 " %f"}, &novoPreco);\par
00178                 \} {\cf19 while} (!checkNumber(novoPreco));\par
00179 \par
00180                 yellow(); printf({\cf22 "\\nNovo pre\'E7o da m\'E3o de obra [%0.2f\'80]: "}, novoPreco); white();\par
00181                 green(); printf({\cf22 "\\n[!] Pre\'E7o da m\'E3o de obra [Artigo %s] alterado com sucesso [!]\\n"}, \\\par
00182                 artigo[artigoToUpdate].artigo); white();\par
00183 \par
00184                 artigo[artigoToUpdate].maoObra = novoPreco;\par
00185                 {\cf19 break};\par
00186 \par
00187             {\cf19 case} updateMargemLucro:\par
00188                 printf({\cf22 "\\nPre\'E7o atual da margem de lucro [%0.2f\'80]: "}, artigo[artigoToUpdate].margemLucro);\par
00189 \par
00190                 {\cf19 do} \{\par
00191                     printf({\cf22 "\\nNova Margem de Lucro: "});\par
00192                     scanf({\cf22 " %f"}, &novoPreco);\par
00193                 \} {\cf19 while} (!checkNumber(novoPreco));\par
00194 \par
00195                 yellow(); printf({\cf22 "\\nNovo pre\'E7o da margem de lucro [%0.2f\'80]: "}, novoPreco); white();\par
00196                 green(); printf({\cf22 "\\n[!] Pre\'E7o da margem de lucro [Artigo %s] alterado com sucesso [!]\\n"}, \\\par
00197                 artigo[artigoToUpdate].artigo); white();\par
00198 \par
00199                 artigo[artigoToUpdate].margemLucro = novoPreco;\par
00200                 {\cf19 break};\par
00201 \par
00202             {\cf19 case} updatePrecoDefault:\par
00203                 printf({\cf22 "\\nPre\'E7o atual por defeito [%0.2f\'80]: "}, artigo[artigoToUpdate].defaultPreco);\par
00204 \par
00205                 {\cf19 do} \{\par
00206                     printf({\cf22 "\\nNovo Pre\'E7o por Defeito: "});\par
00207                     scanf({\cf22 " %f"}, &novoPreco);\par
00208                 \} {\cf19 while} (!checkNumber(novoPreco));\par
00209 \par
00210                 yellow(); printf({\cf22 "\\nNovo pre\'E7o por defeito [%0.2f\'80]: "}, novoPreco); white();\par
00211                 green(); printf({\cf22 "\\n[!] Preco por defeito [Artigo %s] alterado com sucesso [!]\\n"}, \\\par
00212                 artigo[artigoToUpdate].artigo); white();\par
00213 \par
00214                 artigo[artigoToUpdate].defaultPreco = novoPreco;\par
00215                 {\cf19 break};\par
00216 \par
00217             {\cf19 case} updatePrecoTamanho:\par
00218                 {\cf19 do} \{\par
00219                     printf({\cf22 "\\nTamanho a alterar: "});\par
00220                     scanf({\cf22 "%d"}, &tamanhoAlterar);\par
00221                 \} {\cf19 while} (!availableForOperation(5, artigoToUpdate, tamanhoAlterar));\par
00222 \par
00223                 {\cf19 for} ({\cf18 int} tam = artigo[artigoToUpdate].tamanhos[0]; tam <= artigo[artigoToUpdate].tamanhos[1]; tam++)\par
00224                 \{\par
00225                     {\cf19 if} (tam == tamanhoAlterar)\par
00226                     \{\par
00227                         printf({\cf22 "\\nPre\'E7o atual do tamanho [%d] [%0.2f\'80]\\n"}, tam, artigo[artigoToUpdate].tamanhoPreco[tam - artigo[artigoToUpdate].tamanhos[0]][1]);\par
00228 \par
00229                         {\cf19 do} \{\par
00230                             printf({\cf22 "\\nNovo Pre\'E7o: "});\par
00231                             scanf({\cf22 " %f"}, &novoPreco);\par
00232                         \} {\cf19 while} (checkNumber(novoPreco) == {\cf17 false});\par
00233 \par
00234                         yellow(); printf({\cf22 "\\nNovo pre\'E7o [%0.2f\'80]: "}, novoPreco); white();\par
00235                         green(); printf({\cf22 "\\n[!] Pre\'E7o [Artigo %s] alterado com sucesso [!]\\n"}, \\\par
00236                         artigo[artigoToUpdate].artigo); white();\par
00237 \par
00238                         artigo[artigoToUpdate].tamanhoPreco[tam - artigo[artigoToUpdate].tamanhos[0]][1] = novoPreco;\par
00239                         {\cf19 break};\par
00240                     \}\par
00241                 \}\par
00242                 {\cf19 break};\par
00243 \par
00244             {\cf19 case} updateEstado:\par
00245                 printf({\cf22 "\\nEstado atual [%s]: "}, artigo[artigoToUpdate].estado ? {\cf22 "Disponivel"} : {\cf22 "Indisponivel"});\par
00246                 printf({\cf22 "\\nNovo Estado\\n  [1] Disponivel\\n  [2] Indisponivel\\n> "});\par
00247                 {\cf18 int} novoEstado;\par
00248                 scanf({\cf22 "%d"}, &novoEstado);\par
00249                 {\cf19 if} (novoEstado == 1)\par
00250                 \{\par
00251                     artigo[artigoToUpdate].estado = {\cf17 true};\par
00252                 \}\par
00253                 {\cf19 else}\par
00254                 \{\par
00255                     artigo[artigoToUpdate].estado = {\cf17 false};\par
00256                 \}\par
00257                 green(); printf({\cf22 "\\n[!] Estado [Artigo %s] alterado com sucesso [!]\\n"}, \\\par
00258                 getArtigoName(artigoToUpdate)); white();\par
00259                 {\cf19 break};\par
00260 \par
00261             {\cf19 case} updateCodigo:\par
00262                 codAntigo = artigo[artigoToUpdate].codArtigo;\par
00263                 {\cf19 do} \{\par
00264                     flag = {\cf17 false};\par
00265                     {\cf19 do} \{\par
00266                         printf({\cf22 "\\nNovo C\'F3digo: "});\par
00267                         scanf({\cf22 "%d"}, &novoCodigo);\par
00268                     \} {\cf19 while} (!checkNumber(novoCodigo));\par
00269                     {\cf19 for} ({\cf18 int} i = 0; i <= NA; i++) \{\par
00270                         {\cf19 if} (artigo[i].codArtigo == novoCodigo) \{\par
00271                             red(); printf({\cf22 "\\nC\'F3digo j\'E1 existente!\\n"}); white();\par
00272                             flag = {\cf17 true};\par
00273                             {\cf19 break};\par
00274                         \}\par
00275                     \}\par
00276                 \} {\cf19 while} (flag);\par
00277                 artigo[artigoToUpdate].codArtigo = novoCodigo;\par
00278                 green(); printf({\cf22 "\\n[!] Codigo [Artigo %s] alterado com sucesso [!]\\n"}, \\\par
00279                 artigo[artigoToUpdate].artigo); white();\par
00280                 {\cf19 for} ({\cf18 int} i = 0; i <= NE; i++) \{\par
00281                     {\cf19 if} (encomenda[i].codArtigo == codAntigo) \{\par
00282                         encomenda[i].codArtigo = novoCodigo;\par
00283                     \}\par
00284                 \}\par
00285                 {\cf19 break};\par
00286 \par
00287             {\cf19 case} updateIncremento:\par
00288                 {\cf19 do} \{\par
00289                     printf({\cf22 "\\nIncremento atual [%0.2f\'80]: "}, artigo[artigoToUpdate].incrementoPreco);\par
00290                     printf({\cf22 "\\nNovo Incremento: "});\par
00291                     scanf({\cf22 " %lf"}, &artigo[artigoToUpdate].incrementoPreco);\par
00292                 \} {\cf19 while} (!checkNumber(artigo[artigoToUpdate].incrementoPreco));\par
00293 \par
00294             {\cf19 case} voltar:\par
00295                 {\cf19 return};\par
00296 \par
00297             {\cf19 default}:\par
00298                 red(); printf({\cf22 "\\n[!] Opc\'E3o Inv\'E1lida [!]\\n"}); white();\par
00299                 {\cf19 break};\par
00300         \}\par
00301 \par
00303         yellow(); printf({\cf22 "\\n[!] Recalculando pre\'E7os [!]\\n"}); white();\par
00304         artigo[artigoToUpdate].defaultPreco = artigo[artigoToUpdate].maoObra + artigo[artigoToUpdate].custosFixos + artigo[artigoToUpdate].margemLucro;\par
00305         {\cf18 int} count = 0;\par
00306         {\cf19 for} ({\cf18 int} tam = artigo[artigoToUpdate].tamanhos[0]; tam <= artigo[artigoToUpdate].tamanhos[1]; tam++)\par
00307         \{\par
00308             artigo[artigoToUpdate].tamanhoPreco[count][1] = artigo[artigoToUpdate].defaultPreco + (artigo[artigoToUpdate].incrementoPreco * (count + 1));\par
00309             count++;\par
00310         \}\par
00311         printf({\cf22 "\\nPretende realizar outra operac\'E3o? (s/N): "});\par
00312         {\cf18 char} resposta[2];\par
00313         scanf({\cf22 " %c"}, &resposta);\par
00314         {\cf19 if} (strcmp(resposta, {\cf22 "s"}) == 0 || strcmp(resposta, {\cf22 "S"}) == 0)\par
00315         \{\par
00316             updateArtigo();\par
00317         \}\par
00318         {\cf19 else}\par
00319         \{\par
00320             {\cf19 return};\par
00321         \}\par
00322     \} {\cf19 while} (opcao != 0);\par
00323 \}\par
00324 {\cf21 #pragma endregion}\par
00325 \par
00326 {\cf21 #pragma region UpdateDesconto}\par
00332 {\cf18 void} updateDesconto()\par
00333 \{\par
00334     cyan(); printf({\cf22 "\\n--------------- Alterar Desconto ---------------\\n"}); white();\par
00335     yellow(); printf({\cf22 "\\nValor de desconto atual: %.f%%"}, runtime->percentageDesconto * 100); white();\par
00336     yellow(); printf({\cf22 "\\nC\'F3digo de desconto atual: %s\\n"}, runtime->stringDesconto); white();\par
00337 \par
00338     printf({\cf22 "\\nInforma\'E7\'E3o a alterar\\n  [1] Valor\\n  [2] C\'F3digo\\n> "});\par
00339     {\cf18 int} opcao;\par
00340     scanf({\cf22 "%d"}, &opcao);\par
00341 \par
00342     {\cf19 switch} (opcao)\par
00343     \{\par
00344         {\cf19 case} 1:\par
00345             {\cf19 do} \{\par
00346                 printf({\cf22 "\\nNovo Valor de Desconto (em %%): "});\par
00347                 scanf({\cf22 "%lf"}, &runtime->percentageDesconto);\par
00348             \} {\cf19 while} (!checkNumber(runtime->percentageDesconto));\par
00349             yellow(); printf({\cf22 "[!] Novo Valor de Desconto: %.f%% [!]\\n"}, runtime->percentageDesconto); white();\par
00350             runtime->percentageDesconto /= 100;\par
00351             {\cf19 break};\par
00352         \par
00353         {\cf19 case} 2:\par
00354             printf({\cf22 "\\nNovo C\'F3digo de Desconto: "});\par
00355             scanf({\cf22 "%7c"}, runtime->stringDesconto);\par
00356             yellow(); printf({\cf22 "\\n[!] Novo C\'F3digo de Desconto: %s [!]\\n"}, runtime->stringDesconto); white();\par
00357             {\cf19 break};\par
00358         \par
00359         {\cf19 default}:\par
00360             red(); printf({\cf22 "\\n[!] Op\'E7\'E3o inv\'E1lida [!]\\n"}); white();\par
00361             sleep(1);\par
00362             clearScreen();\par
00363             updateDesconto();\par
00364             {\cf19 break};\par
00365     \}\par
00366 \par
00367     printf({\cf22 "\\nPretende alterar outra informa\'E7\'E3o? (s/N): "});\par
00368     {\cf18 char} opcao2;\par
00369     scanf({\cf22 " %c"}, &opcao2);\par
00370     {\cf19 if} (opcao2 == {\cf23 's'} || opcao2 == {\cf23 'S'})\par
00371     \{\par
00372         clearScreen();\par
00373         updateDesconto();\par
00374     \}\par
00375 \}\par
00376 {\cf21 #pragma endregion}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
clientes.c File Reference\par \pard\plain 
{\tc\tcl2 \v clientes.c}
{\xe \v clientes.c}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <stdbool.h>}\par
{\f2 #include <unistd.h>}\par
{\f2 #include <time.h>}\par
{\f2 #include "definitions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addCliente} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite adicionar um cliente. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateClient} (int clienteToChange, int via)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite atualizar um cliente. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getEstadoCliente} (int codCliente)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que verifica o estado do cliente indicado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b getClientName} (int codCliente)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que obt\'EAm o nome do cliente. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v addCliente\:clientes.c}
{\xe \v clientes.c\:addCliente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void addCliente ()}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite adicionar um cliente. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Os} \cell }{parametros necessarios para a adi\'E7\'E3o do cliente \cell }
{\row }
}
}{
Definition at line {\b 16} of file {\b clientes.c}.}\par
}
{\xe \v getClientName\:clientes.c}
{\xe \v clientes.c\:getClientName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * getClientName (int  {\i codCliente})}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que obt\'EAm o nome do cliente. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ID} \cell }{do cliente \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna o nome do cliente (string) \par
}}}{
Definition at line {\b 254} of file {\b clientes.c}.}\par
}
{\xe \v getEstadoCliente\:clientes.c}
{\xe \v clientes.c\:getEstadoCliente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool getEstadoCliente (int  {\i codCliente})}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que verifica o estado do cliente indicado. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ID} \cell }{do cliente \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna True - caso o cliente exista ou esteja disponivel False - caso o cliente n\'E3o exista ou esteja indisponivel \par
}}}{
Definition at line {\b 227} of file {\b clientes.c}.}\par
}
{\xe \v updateClient\:clientes.c}
{\xe \v clientes.c\:updateClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updateClient (int  {\i clienteToChange}, int  {\i via})}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite atualizar um cliente. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i clienteToChange} \cell }{- Cliente a ser atualizado \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i via} \cell }{- caso a fun\'E7\'E3o seja chamada via menu cliente, apenas permitir a altera\'E7\'E3o do cliente autenticado (e perguntando o seu c\'F3digo) \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Via Menu Cliente, onde se realiza verifica\'E7\'E3o de seguran\'E7a\par
Via Menu Administrador\par
}}}{
Definition at line {\b 82} of file {\b clientes.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
clientes.c\par \pard\plain 
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <string.h>}\par
00003 {\cf21 #include <stdbool.h>}\par
00004 {\cf21 #include <unistd.h>}\par
00005 {\cf21 #include <time.h>}\par
00006 \par
00007 {\cf21 #include "definitions.h"}\par
00008 \par
00009 {\cf20 /* =========================== Operation Related Functions =========================== */}\par
00010 \par
00011 {\cf21 #pragma region addClient}\par
00016 {\cf18 void} addCliente()\par
00017 \{\par
00018     cyan(); printf({\cf22 "\\n_______ Adicionar Cliente _______\\n"}); white();\par
00019     reallocStruct(2);\par
00020 \par
00021     {\cf19 do} \{\par
00022         printf({\cf22 "\\nNome Cliente: "});\par
00023         scanf({\cf22 "%s"}, cliente[NC].nome);\par
00024     \} {\cf19 while} (!checkString(cliente[NC].nome));\par
00025 \par
00026     {\cf19 do}\par
00027     \{\par
00028         printf({\cf22 "\\nNIF (dever\'E1 conter 9 n\'FAmeros): "});\par
00029         scanf({\cf22 "%d"}, &cliente[NC].nif);\par
00030         \par
00031         {\cf19 if} (numberOfDigits(cliente[NC].nif) != 9)\par
00032         \{\par
00033             red(); printf({\cf22 "\\n[!] NIF INV\'C1LIDO [!]\\n"});\par
00034             printf({\cf22 "[!] Este dever\'E1 conter 9 n\'FAmeros [!]\\n"}); white();\par
00035         \}\par
00036     \} {\cf19 while} (numberOfDigits(cliente[NC].nif) != 9);\par
00037 \par
00038     {\cf18 bool} flag;\par
00039     {\cf19 do} \{\par
00040         flag = {\cf17 false};\par
00041         printf({\cf22 "\\nC\'F3digo Cliente (dever\'E1 conter at\'E9 4 n\'FAmeros): "});\par
00042         scanf({\cf22 "%d"}, &cliente[NC].codCliente);\par
00043         {\cf19 if} (numberOfDigits(cliente[NC].codCliente) != 4)\par
00044         \{\par
00045             red(); printf({\cf22 "\\n[!] C\'F3digo Cliente INV\'C1LIDO [!]\\n"});\par
00046             printf({\cf22 "[!] Este dever\'E1 at\'E9 4 n\'FAmeros [!]\\n"}); white();\par
00047             flag = {\cf17 true};\par
00048             {\cf19 continue};\par
00049         \}\par
00050         {\cf19 for} ({\cf18 int} i = 0; i < NC; i++)\par
00051         \{\par
00052             {\cf19 if} (cliente[i].codCliente == cliente[NC].codCliente)\par
00053             \{\par
00054                 red(); printf({\cf22 "\\n[!] C\'F3digo Cliente J\'C1 EXISTE [!]\\n"});\par
00055                 printf({\cf22 "[!] Este dever\'E1 ser \'FAnico [!]\\n"}); white();\par
00056                 flag = {\cf17 true};\par
00057                 {\cf19 break};\par
00058             \}\par
00059         \}\par
00060     \} {\cf19 while} (flag);\par
00061 \par
00062     {\cf19 do}\par
00063     \{\par
00064         printf({\cf22 "\\nPa\'EDs do cliente: "});\par
00065         scanf({\cf22 " %24s"}, cliente[NC].pais);\par
00066     \} {\cf19 while} (!checkString(cliente[NC].pais));\par
00067 \par
00068     cliente[NC].estado = {\cf17 true};\par
00069 \par
00070     green(); printf({\cf22 "\\n[!] Cliente %s criado com sucesso [!]\\n"}, cliente[NC].nome); white();\par
00071     sleep(1); clearScreen();\par
00072 \}\par
00073 {\cf21 #pragma endregion}\par
00074 \par
00075 {\cf21 #pragma region updateClient}\par
00082 {\cf18 void} updateClient({\cf18 int} clienteToChange, {\cf18 int} via)\par
00083 \{\par
00084     {\cf19 if} (NC == -1)\par
00085     \{\par
00086         red(); printf({\cf22 "\\n[!] N\'E3o existem clientes [!]"}); white();\par
00087         pressEnter({\cf17 true});\par
00088         {\cf19 return};\par
00089     \}\par
00090 \par
00091     cyan(); printf({\cf22 "\\n_______ Atualizar Cliente _______\\n"}); white();\par
00092 \par
00094     {\cf19 if} (runtime->currentClient != 0 && via == 1)\par
00095     \{\par
00096         yellow(); printf({\cf22 "\\nO cliente %s est\'E1 autenticado\\n"}, getClientName(runtime->currentClient));\par
00097         yellow(); printf({\cf22 "\\nPor quest\'F5es de seguran\'E7a prove que \'E9 o utilizador correto introduzindo o seu c\'F3digo: "});  white();\par
00098         {\cf18 int} antibruteforce = 0;\par
00099         scanf({\cf22 "%d"}, &clienteToChange);\par
00100         {\cf19 while} (clienteToChange != runtime->currentClient && antibruteforce < 2)\par
00101         \{\par
00102             red(); printf({\cf22 "\\n[!] C\'F3digo incorreto [!]\\n"}); white();\par
00103             yellow(); printf({\cf22 "\\nPor quest\'F5es de seguran\'E7a prove que \'E9 o utilizador correto introduzindo o seu c\'F3digo: "}); white();\par
00104             scanf({\cf22 "%d"}, &clienteToChange);\par
00105             antibruteforce++;\par
00106         \}\par
00107         {\cf19 if} (antibruteforce == 2)\par
00108         \{\par
00109             red(); printf({\cf22 "\\n[!] N\'FAmero de tentativas excedidas [!]\\n"}); white();\par
00110             pressEnter({\cf17 true});\par
00111             {\cf19 return};\par
00112         \}\par
00113     \}\par
00114     {\cf19 else} {\cf19 if} (runtime->currentClient == 0 && via == 1)\par
00115     \{\par
00116         red(); printf({\cf22 "\\n[!] N\'E3o existe cliente autenticado [!]\\n"}); white();\par
00117         yellow(); printf({\cf22 "\\nPor quest\'F5es de seguran\'E7a, o cliente a ser alterado dever\'E1 ser autenticado\\n"}); white();\par
00118         pressEnter({\cf17 true});\par
00119         {\cf19 return};\par
00120     \}\par
00121 \par
00123     {\cf19 if} (via == 0)\par
00124     \{    \par
00125         {\cf19 do}\par
00126         \{\par
00127             printf({\cf22 "\\nCliente (C\'F3digo): "});\par
00128             scanf({\cf22 "%d"}, &clienteToChange);\par
00129             {\cf19 if} (!getEstadoCliente(clienteToChange))\par
00130             \{\par
00131                 red(); printf({\cf22 "\\n[!] Cliente n\'E3o existe, indique um cliente v\'E1lido [!]\\n"}); white();\par
00132             \}\par
00133         \} {\cf19 while} (!getEstadoCliente(clienteToChange));\par
00134     \}\par
00135 \par
00136 \par
00137     printf({\cf22 "\\nInforma\'E7\'E3o a alterar para o cliente %s:\\n"}, getClientName(clienteToChange));\par
00138     printf({\cf22 "  [1] Nome\\n"});\par
00139     printf({\cf22 "  [2] NIF\\n"});\par
00140     printf({\cf22 "  [3] C\'F3digo Cliente\\n"});\par
00141     printf({\cf22 "  [4] Pa\'EDs\\n> "});\par
00142     {\cf18 int} opcao;\par
00143     scanf({\cf22 "%d"}, &opcao);\par
00144     \par
00145     {\cf19 for} ({\cf18 int} clients = 0; clients <= NC; clients++)\par
00146     \{\par
00147         {\cf19 if} (cliente[clients].codCliente == clienteToChange)\par
00148         \{\par
00149             clienteToChange = clients;\par
00150         \}\par
00151     \}\par
00152 \par
00153     {\cf19 switch} (opcao)\par
00154     \{\par
00155         {\cf18 char} newString[SC]; {\cf18 int} newValue;\par
00156         {\cf19 case} 1:\par
00157             {\cf19 do}\par
00158             \{\par
00159                 printf({\cf22 "\\nNovo Nome: "});\par
00160                 scanf({\cf22 "%24s"}, newString);\par
00161             \} {\cf19 while} (!checkString(newString));\par
00162             strcpy(cliente[clienteToChange].nome, newString);\par
00163             green(); printf({\cf22 "\\n[!] Nome alterado com sucesso [!]\\n"}); white();\par
00164             {\cf19 break};\par
00165 \par
00166         {\cf19 case} 2:\par
00167             {\cf19 do}\par
00168             \{\par
00169                 printf({\cf22 "\\nNovo NIF: "});\par
00170                 scanf({\cf22 "%d"}, &newValue);\par
00171                 {\cf19 if} (numberOfDigits(newValue) != 9)\par
00172                 \{\par
00173                     red(); printf({\cf22 "\\n[!] NIF INV\'C1LIDO [!]\\n"});\par
00174                     printf({\cf22 "[!] Este dever\'E1 conter 9 n\'FAmeros [!]\\n"}); white();\par
00175                 \}\par
00176             \} {\cf19 while} (numberOfDigits(newValue) != 9);\par
00177             cliente[clienteToChange].nif = newValue;\par
00178             green(); printf({\cf22 "\\n[!] NIF alterado com sucesso [!]\\n"}); white();\par
00179             {\cf19 break};\par
00180 \par
00181         {\cf19 case} 3:\par
00182             {\cf19 do}\par
00183             \{\par
00184                 printf({\cf22 "\\nNovo C\'F3digo Cliente: "});\par
00185                 scanf({\cf22 " %d"}, &newValue);\par
00186             \} {\cf19 while} (numberOfDigits(newValue) != 4);\par
00187             cliente[clienteToChange].codCliente = newValue;\par
00188             green(); printf({\cf22 "\\n[!] C\'F3digo Cliente alterado com sucesso [!]\\n"}); white();\par
00189             {\cf19 break};\par
00190 \par
00191         {\cf19 case} 4:\par
00192             {\cf19 do}\par
00193             \{\par
00194                 printf({\cf22 "\\nNovo Pa\'EDs: "});\par
00195                 scanf({\cf22 " %24s"}, newString);\par
00196             \} {\cf19 while} (!checkString(newString));\par
00197             strcpy(cliente[clienteToChange].pais, newString);\par
00198             green(); printf({\cf22 "\\n[!] Pa\'EDs alterado com sucesso [!]\\n"}); white();\par
00199             {\cf19 break};\par
00200 \par
00201         {\cf19 default}:\par
00202             red(); printf({\cf22 "\\n[!] Op\'E7\'E3o Inv\'E1lida [!]\\n"}); white();\par
00203             sleep(1); clearScreen();\par
00204             updateClient(clienteToChange, via);\par
00205     \}\par
00206 \par
00207     printf({\cf22 "\\nPretende alterar outra informa\'E7\'E3o? (s/N)\\n> "});\par
00208     {\cf18 char} opcao3;\par
00209     scanf({\cf22 " %c"}, &opcao3);\par
00210     {\cf19 if} (opcao3 == {\cf23 's'} || opcao3 == {\cf23 'S'})\par
00211     \{\par
00212         updateClient(clienteToChange, via);\par
00213     \}\par
00214     clearScreen();\par
00215 \}\par
00216 {\cf21 #pragma endregion}\par
00217 \par
00218 {\cf20 /* =========================== Cliente Specific Queries =========================== */}\par
00219 \par
00220 {\cf21 #pragma region getEstadoCliente}\par
00227 {\cf18 bool} getEstadoCliente({\cf18 int} codCliente)\par
00228 \{\par
00229     {\cf19 for} ({\cf18 int} user = 0; user <= NC; user++)\par
00230     \{\par
00231         {\cf19 if} (cliente[user].codCliente == codCliente)\par
00232         \{\par
00233             {\cf19 if} (cliente[user].estado)\par
00234             \{\par
00235                 {\cf19 return} {\cf17 true};\par
00236             \}\par
00237             {\cf19 else}\par
00238             \{\par
00239                 red(); printf({\cf22 "\\n[!] Cliente n\'E3o est\'E1 dispon\'EDvel [!]\\n"}); white();\par
00240                 {\cf19 return} {\cf17 false};\par
00241             \}\par
00242         \}\par
00243     \}\par
00244     {\cf19 return} 0;\par
00245 \}\par
00246 {\cf21 #pragma endregion}\par
00247 \par
00248 {\cf21 #pragma region getClienteName}\par
00254 {\cf18 char}* getClientName({\cf18 int} codCliente)\par
00255 \{\par
00256     {\cf19 for} ({\cf18 int} user = 0; user <= NC; user++)\par
00257     \{\par
00258         {\cf19 if} (cliente[user].codCliente == codCliente)\par
00259         \{\par
00260             {\cf19 return} cliente[user].nome;\par
00261         \}\par
00262     \}\par
00263     {\cf19 return} NULL;\par
00264 \}\par
00265 {\cf21 #pragma endregion}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
colors.c File Reference\par \pard\plain 
{\tc\tcl2 \v colors.c}
{\xe \v colors.c}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include "definitions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b white} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permite o uso de "output" colorido. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b red} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b green} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b blue} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b yellow} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b purple} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b bold} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b boldRed} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cyan} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v blue\:colors.c}
{\xe \v colors.c\:blue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void blue ()}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b colors.c}.}\par
}
{\xe \v bold\:colors.c}
{\xe \v colors.c\:bold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void bold ()}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 39} of file {\b colors.c}.}\par
}
{\xe \v boldRed\:colors.c}
{\xe \v colors.c\:boldRed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void boldRed ()}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 44} of file {\b colors.c}.}\par
}
{\xe \v cyan\:colors.c}
{\xe \v colors.c\:cyan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cyan ()}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 49} of file {\b colors.c}.}\par
}
{\xe \v green\:colors.c}
{\xe \v colors.c\:green}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void green ()}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b colors.c}.}\par
}
{\xe \v purple\:colors.c}
{\xe \v colors.c\:purple}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void purple ()}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 34} of file {\b colors.c}.}\par
}
{\xe \v red\:colors.c}
{\xe \v colors.c\:red}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void red ()}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b colors.c}.}\par
}
{\xe \v white\:colors.c}
{\xe \v colors.c\:white}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void white ()}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permite o uso de "output" colorido. }}\par
{
Definition at line {\b 9} of file {\b colors.c}.}\par
}
{\xe \v yellow\:colors.c}
{\xe \v colors.c\:yellow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void yellow ()}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 29} of file {\b colors.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
colors.c\par \pard\plain 
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 \par
00003 {\cf21 #include "definitions.h"}\par
00004 \par
00005 {\cf21 #pragma region Colors}\par
00009 {\cf18 void} white()\par
00010 \{\par
00011     printf({\cf22 "\\033[0m"});\par
00012 \}\par
00013 \par
00014 {\cf18 void} red()\par
00015 \{\par
00016     printf({\cf22 "\\033[0;31m"});\par
00017 \}\par
00018 \par
00019 {\cf18 void} green()\par
00020 \{\par
00021     printf({\cf22 "\\033[0;32m"});\par
00022 \}\par
00023 \par
00024 {\cf18 void} blue()\par
00025 \{\par
00026     printf({\cf22 "\\033[1;34m"});\par
00027 \}\par
00028 \par
00029 {\cf18 void} yellow()\par
00030 \{\par
00031     printf({\cf22 "\\033[0;33m"});\par
00032 \}\par
00033 \par
00034 {\cf18 void} purple()\par
00035 \{\par
00036     printf({\cf22 "\\033[0;35m"});\par
00037 \}\par
00038 \par
00039 {\cf18 void} bold()\par
00040 \{\par
00041     printf({\cf22 "\\033[1m"});\par
00042 \}\par
00043 \par
00044 {\cf18 void} boldRed()\par
00045 \{\par
00046     printf({\cf22 "\\033[1;31m"});\par
00047 \}\par
00048 \par
00049 {\cf18 void} cyan()\par
00050 \{\par
00051     printf({\cf22 "\\033[0;36m"});\par
00052 \}\par
00053 {\cf21 #pragma endregion}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
data.c File Reference\par \pard\plain 
{\tc\tcl2 \v data.c}
{\xe \v data.c}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <stdbool.h>}\par
{\f2 #include <unistd.h>}\par
{\f2 #include <time.h>}\par
{\f2 #include "definitions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b importData} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Importa os dados dos ficheiros bin\'E1rios. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b exportData} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exporta os dados dos ficheiros bin\'E1rios. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b importDefaultData} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Importa os dados padr\'E3o (default.bin) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b exportDefaultData} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exporta os dados padr\'E3o do programa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b exportEncomendas} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exporta as encomendas para um ficheiro CSV. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b deleteData} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Apaga todos os dados em mem\'F3ria do programa. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v deleteData\:data.c}
{\xe \v data.c\:deleteData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void deleteData ()}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Apaga todos os dados em mem\'F3ria do programa. }}\par
{
Definition at line {\b 274} of file {\b data.c}.}\par
}
{\xe \v exportData\:data.c}
{\xe \v data.c\:exportData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void exportData ()}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exporta os dados dos ficheiros bin\'E1rios. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Caso surja algum erro na escrita, o programa termina \par
}}}{
Definition at line {\b 71} of file {\b data.c}.}\par
}
{\xe \v exportDefaultData\:data.c}
{\xe \v data.c\:exportDefaultData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void exportDefaultData ()}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exporta os dados padr\'E3o do programa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Coloca os dados padr\'E3o em mem\'F3ria e em seguida exporta para o ficheiro default.bin \par
}}}{
Definition at line {\b 149} of file {\b data.c}.}\par
}
{\xe \v exportEncomendas\:data.c}
{\xe \v data.c\:exportEncomendas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void exportEncomendas ()}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exporta as encomendas para um ficheiro CSV. }}\par
{
Definition at line {\b 239} of file {\b data.c}.}\par
}
{\xe \v importData\:data.c}
{\xe \v data.c\:importData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void importData ()}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Importa os dados dos ficheiros bin\'E1rios. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Caso nao exista algum ficheiro ou caso surja erro na leitura, o programa termina \par
}}}{
Definition at line {\b 15} of file {\b data.c}.}\par
}
{\xe \v importDefaultData\:data.c}
{\xe \v data.c\:importDefaultData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void importDefaultData ()}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Importa os dados padr\'E3o (default.bin) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Caso o ficheiro n\'E3o exista a fun\'E7\'E3o {\b exportDefaultData()} \'E9 chamada para criar o ficheiro com os dados padr\'E3o \par
}}}{
Definition at line {\b 115} of file {\b data.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
data.c\par \pard\plain 
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdlib.h>}\par
00003 {\cf21 #include <string.h>}\par
00004 {\cf21 #include <stdbool.h>}\par
00005 {\cf21 #include <unistd.h>}\par
00006 {\cf21 #include <time.h>}\par
00007 \par
00008 {\cf21 #include "definitions.h"}\par
00009 \par
00010 {\cf21 #pragma region ImportData}\par
00015 {\cf18 void} importData()\par
00016 \{\par
00017     FILE *fcliente = fopen({\cf22 "clientes.bin"}, {\cf22 "rb"});\par
00018     FILE *fartigo = fopen({\cf22 "artigos.bin"}, {\cf22 "rb"});\par
00019     FILE *fencomenda = fopen({\cf22 "encomendas.bin"}, {\cf22 "rb"});\par
00020 \par
00021     {\cf19 if} (fcliente == NULL) \{\par
00022         printf({\cf22 "Erro ao abrir o ficheiro clientes.bin\\n"});\par
00023         freeMemory({\cf17 false});\par
00024         exit(1);\par
00025     \}\par
00026     {\cf19 if} (fartigo == NULL) \{\par
00027         printf({\cf22 "Erro ao abrir o ficheiro artigos.bin\\n"});\par
00028         freeMemory({\cf17 false});\par
00029         exit(1);\par
00030     \}\par
00031     {\cf19 if} (fencomenda == NULL) \{\par
00032         printf({\cf22 "Erro ao abrir o ficheiro encomendas.bin\\n"});\par
00033         freeMemory({\cf17 false});\par
00034         exit(1);\par
00035     \}\par
00036 \par
00037     freeMemory({\cf17 false});\par
00038 \par
00039     fread(&NC, {\cf17 sizeof}({\cf18 int}), 1, fcliente);\par
00040     fread(&NA, {\cf17 sizeof}({\cf18 int}), 1, fartigo);\par
00041     fread(&NE, {\cf17 sizeof}({\cf18 int}), 1, fencomenda);\par
00042 \par
00043     cliente = malloc({\cf17 sizeof}(Clientes) * (NC + 1));\par
00044     artigo = malloc({\cf17 sizeof}(Artigos) * (NA + 1));\par
00045     encomenda = malloc({\cf17 sizeof}(Encomendas) * (NE + 1));\par
00046 \par
00047     {\cf19 for} ({\cf18 int} i = 0; i <= NC; i++) \{\par
00048         fread(&cliente[i], {\cf17 sizeof}(Clientes), 1, fcliente);\par
00049     \}\par
00050     {\cf19 for} ({\cf18 int} i = 0; i <= NA; i++) \{\par
00051         fread(&artigo[i], {\cf17 sizeof}(Artigos), 1, fartigo);\par
00052     \}\par
00053     {\cf19 for} ({\cf18 int} i = 0; i <= NE; i++) \{\par
00054         fread(&encomenda[i], {\cf17 sizeof}(Encomendas), 1, fencomenda);\par
00055     \}\par
00056 \par
00057     fclose(fcliente);\par
00058     fclose(fartigo);\par
00059     fclose(fencomenda);\par
00060 \par
00061     green(); printf({\cf22 "\\nDados importados com sucesso!\\n"}); white();\par
00062     sleep(1);\par
00063 \}\par
00064 {\cf21 #pragma endregion}\par
00065 \par
00066 {\cf21 #pragma region ExportData}\par
00071 {\cf18 void} exportData()\par
00072 \{\par
00073     FILE *fcliente = fopen({\cf22 "clientes.bin"}, {\cf22 "wb"});\par
00074     FILE *fartigo = fopen({\cf22 "artigos.bin"}, {\cf22 "wb"});\par
00075     FILE *fencomenda = fopen({\cf22 "encomendas.bin"}, {\cf22 "wb"});\par
00076 \par
00077     {\cf19 if} (fcliente == NULL) \{\par
00078         printf({\cf22 "Erro ao escreve o ficheiro clientes.bin\\n"});\par
00079         freeMemory({\cf17 false});\par
00080         exit(1);\par
00081     \}\par
00082     {\cf19 if} (fartigo == NULL) \{\par
00083         printf({\cf22 "Erro ao escrever no ficheiro artigos.bin\\n"});\par
00084         freeMemory({\cf17 false});\par
00085         exit(1);\par
00086     \}\par
00087     {\cf19 if} (fencomenda == NULL) \{\par
00088         printf({\cf22 "Erro ao escrever no ficheiro encomendas.bin\\n"});\par
00089         freeMemory({\cf17 false});\par
00090         exit(1);\par
00091     \}\par
00092 \par
00093     fwrite(&NC, {\cf17 sizeof}({\cf18 int}), 1, fcliente);\par
00094     fwrite(&NA, {\cf17 sizeof}({\cf18 int}), 1, fartigo);\par
00095     fwrite(&NE, {\cf17 sizeof}({\cf18 int}), 1, fencomenda);\par
00096 \par
00097     fwrite(cliente, {\cf17 sizeof}(Clientes) * (NC + 1), NC + 1, fcliente);\par
00098     fwrite(artigo, {\cf17 sizeof}(Artigos) * (NA + 1), NA + 1, fartigo);\par
00099     fwrite(encomenda, {\cf17 sizeof}(Encomendas) * (NE + 1), NE + 1, fencomenda);\par
00100 \par
00101     fclose(fcliente);\par
00102     fclose(fartigo);\par
00103     fclose(fencomenda);\par
00104 \par
00105     green(); printf({\cf22 "\\n[!] Dados exportados com sucesso! [!]\\n"}); white();\par
00106     sleep(1);\par
00107 \}\par
00108 {\cf21 #pragma endregion}\par
00109 \par
00110 {\cf21 #pragma region importDefaultData}\par
00115 {\cf18 void} importDefaultData() \{\par
00116     FILE *fdefault = fopen({\cf22 "default.bin"}, {\cf22 "rb"});\par
00117     \par
00118     {\cf19 if} (fdefault == NULL) \{\par
00119         red(); printf({\cf22 "\\n[!] O Ficheiro default.bin n\'E3o existe! A criar... [!]\\n"}); white();\par
00120         exportDefaultData();\par
00121         {\cf19 return};\par
00122     \}\par
00123 \par
00124     fread(&NA, {\cf17 sizeof}({\cf18 int}), 1, fdefault);\par
00125 \par
00126     artigo = malloc({\cf17 sizeof}(Artigos) * (NA + 1));\par
00127     {\cf19 if} (artigo == NULL) \{\par
00128         red(); printf({\cf22 "[!] Erro ao alocar mem\'F3ria [!]\\n"}); white();\par
00129         freeMemory({\cf17 false});\par
00130         exit(1);\par
00131     \}\par
00132 \par
00133     {\cf19 for} ({\cf18 int} i = 0; i <= NA; i++) \{\par
00134         fread(&artigo[i], {\cf17 sizeof}(Artigos), 1, fdefault);\par
00135     \}\par
00136 \par
00137     strcpy(runtime->stringDesconto, {\cf22 "5off"});\par
00138     runtime->percentageDesconto = 0.05;\par
00139 \par
00140     fclose(fdefault);\par
00141 \}\par
00142 {\cf21 #pragma endregion}\par
00143 \par
00144 {\cf21 #pragma region exportDefaultData}\par
00149 {\cf18 void} exportDefaultData()\par
00150 \{\par
00151     {\cf20 /* --- Sapatos --- */}\par
00152     reallocStruct(1);\par
00153 \par
00154     strcpy(artigo[NA].artigo, {\cf22 "Sapato"});\par
00155     artigo[NA].codArtigo = 1;\par
00156     artigo[NA].maoObra = 5;\par
00157     artigo[NA].custosFixos = 3;\par
00158     artigo[NA].margemLucro = 0.3;   \par
00159     artigo[NA].tamanhos[0] = 34;\par
00160     artigo[NA].tamanhos[1] = 48;\par
00161     artigo[NA].defaultPreco = artigo[NA].maoObra + artigo[NA].custosFixos + artigo[NA].margemLucro;\par
00162     artigo[NA].incrementoPreco = 0.05;\par
00163     {\cf18 int} i = 0;\par
00164     {\cf19 for}({\cf18 int} tam = artigo[NA].tamanhos[0]; tam <= artigo[NA].tamanhos[1]; tam++)\par
00165     \{\par
00166         artigo[NA].tamanhoPreco[i][0] = artigo[NA].tamanhos[0] + i;\par
00167         artigo[NA].tamanhoPreco[i][1] = artigo[NA].defaultPreco + (artigo[NA].incrementoPreco * (i + 1));\par
00168         i++;\par
00169     \}\par
00170     artigo[NA].estado = {\cf17 true};\par
00171 \par
00172     {\cf20 /* --- Sand\'E1lias --- */}\par
00173     reallocStruct(1);\par
00174 \par
00175     strcpy(artigo[NA].artigo, {\cf22 "Sandalias"});\par
00176     artigo[NA].codArtigo = 3;\par
00177     artigo[NA].maoObra = 5;\par
00178     artigo[NA].margemLucro = 0.2;\par
00179     artigo[NA].custosFixos = 3;\par
00180     artigo[NA].tamanhos[0] = 34;\par
00181     artigo[NA].tamanhos[1] = 48;\par
00182     artigo[NA].defaultPreco = artigo[NA].maoObra + artigo[NA].custosFixos + artigo[NA].margemLucro;\par
00183     artigo[NA].incrementoPreco = 0.25;\par
00184     i = 0;\par
00185     {\cf19 for}({\cf18 int} tam = artigo[NA].tamanhos[0]; tam <= artigo[NA].tamanhos[1]; tam++)\par
00186     \{\par
00187         artigo[NA].tamanhoPreco[i][0] = artigo[NA].tamanhos[0] + i;\par
00188         artigo[NA].tamanhoPreco[i][1] = artigo[NA].defaultPreco + (artigo[NA].incrementoPreco * (i + 1));\par
00189         i++;\par
00190     \}\par
00191     artigo[NA].estado = {\cf17 true};\par
00192 \par
00193     {\cf20 /* --- Botas --- */}\par
00194     reallocStruct(1);\par
00195 \par
00196     strcpy(artigo[NA].artigo, {\cf22 "Botas"});\par
00197     artigo[NA].codArtigo = 5;\par
00198     artigo[NA].maoObra = 5;\par
00199     artigo[NA].custosFixos = 3;  \par
00200     artigo[NA].margemLucro = 0.4; \par
00201     artigo[NA].tamanhos[0] = 34;\par
00202     artigo[NA].tamanhos[1] = 48;\par
00203     artigo[NA].defaultPreco = artigo[NA].maoObra + artigo[NA].custosFixos + artigo[NA].margemLucro;\par
00204     artigo[NA].incrementoPreco = 0.75;\par
00205     i = 0;\par
00206     {\cf19 for}({\cf18 int} tam = artigo[NA].tamanhos[0]; tam <= artigo[NA].tamanhos[1]; tam++)\par
00207     \{\par
00208         artigo[NA].tamanhoPreco[i][0] = artigo[NA].tamanhos[0] + i;\par
00209         artigo[NA].tamanhoPreco[i][1] = artigo[NA].defaultPreco + (artigo[NA].incrementoPreco * (i + 1));\par
00210         i++;\par
00211     \}\par
00212     artigo[NA].estado = {\cf17 true};\par
00213 \par
00214     strcpy(runtime->stringDesconto, {\cf22 "5off"});\par
00215     runtime->percentageDesconto = 0.05;\par
00216 \par
00217     {\cf20 /* --- Exporta\'E7\'E3o dos dados padr\'E3o --- */}\par
00218     FILE *fdefault = fopen({\cf22 "default.bin"}, {\cf22 "wb"});\par
00219 \par
00220     {\cf19 if} (fdefault == NULL) \{\par
00221         boldRed(); printf({\cf22 "[!] Erro ao escrever no ficheiro default.bin [!]\\n"}); white();\par
00222         freeMemory({\cf17 false});\par
00223         exit(1);\par
00224     \}\par
00225 \par
00226     fwrite(&NA, {\cf17 sizeof}({\cf18 int}), 1, fdefault);\par
00227     fwrite(artigo, {\cf17 sizeof}(Artigos) * (NA + 1), NA + 1, fdefault);\par
00228 \par
00229     fclose(fdefault);\par
00230 \par
00231     green(); printf({\cf22 "\\n[!] Dados padr\'E3o exportados com sucesso! [!]\\n"}); white();\par
00232 \}\par
00233 {\cf21 #pragma endregion}\par
00234 \par
00235 {\cf21 #pragma region ExportEncomendas}\par
00239 {\cf18 void} exportEncomendas()\par
00240 \{\par
00241     {\cf19 if} (NE == -1) \{\par
00242         red(); printf({\cf22 "\\n[!] N\'E3o existem encomendas para exportar [!]"}); white();\par
00243         pressEnter({\cf17 true});\par
00244         {\cf19 return};\par
00245     \}\par
00246 \par
00247     FILE *f = fopen({\cf22 "encomendas.csv"}, {\cf22 "w"});\par
00248 \par
00249     {\cf19 if} (f == NULL) \{\par
00250         printf({\cf22 "Erro ao abrir o ficheiro encomendas.csv\\n"});\par
00251         exit(1);\par
00252     \}\par
00253 \par
00254     fprintf(f, {\cf22 "CodEncomenda,CodArtigo,CodCliente,Artigo,NomeCliente,Tamanho,Quantidade,Preco,Data,Estado\\n"});\par
00255 \par
00256     {\cf19 for} ({\cf18 int} i = 0; i <= NE; i++) \{\par
00257         fprintf(f, {\cf22 "%d,%d,%d,%s,%s,%d,%d,%0.2f,%d/%d/%d,%s\\n"}, \\\par
00258         encomenda[i].codEncomenda, encomenda[i].codArtigo, encomenda[i].codCliente, \\\par
00259         getArtigoName(getArtigoIndex(encomenda[i].codArtigo)), getClientName(encomenda[i].codCliente), \\\par
00260         encomenda[i].tamanho, encomenda[i].quantidade, encomenda[i].total, \\\par
00261         encomenda[i].dia, encomenda[i].mes, encomenda[i].ano, encomenda[i].estado ? {\cf22 "Ativa"} : {\cf22 "Cancelada"});\par
00262     \}\par
00263 \par
00264     fclose(f);\par
00265     green(); printf({\cf22 "\\nFicheiro encomendas.csv exportado com sucesso!"}); white();\par
00266     pressEnter({\cf17 true});\par
00267 \}\par
00268 {\cf21 #pragma endregion}\par
00269 \par
00270 {\cf21 #pragma region DeleteData}\par
00274 {\cf18 void} deleteData() \{\par
00275     red(); printf({\cf22 "\\n[!] Tem a certeza que pretende "});\par
00276     boldRed(); printf({\cf22 "ELIMINAR"}); red(); printf({\cf22 " todos os dados? [!]\\n"});\par
00277     white(); printf({\cf22 "[!] Esta ac\'E7\'E3o n\'E3o pode ser revertida! (s/N): "});\par
00278     {\cf18 char} choice;\par
00279     scanf({\cf22 " %c"}, &choice);\par
00280     {\cf19 if} (choice == {\cf23 's'} || choice == {\cf23 'S'}) \{\par
00281         NA = -1;\par
00282         NC = -1;\par
00283         NE = -1;\par
00284         artigo = realloc(artigo, {\cf17 sizeof}(Artigos) * (NA + 1));\par
00285         cliente = realloc(cliente, {\cf17 sizeof}(Clientes) * (NC + 1));\par
00286         encomenda = realloc(encomenda, {\cf17 sizeof}(Encomendas) * (NE + 1));\par
00287         green(); printf({\cf22 "\\n[!] Dados eliminados com sucesso! [!]"}); white();\par
00288     \} {\cf19 else} \{\par
00289         bold(); printf({\cf22 "\\n[!] A\'E7\'E3o cancelada!"}); white();\par
00290     \}\par
00291     pressEnter({\cf17 true});\par
00292 \}\par
00293 {\cf21 #pragma endregion}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
definitions.h File Reference\par \pard\plain 
{\tc\tcl2 \v definitions.h}
{\xe \v definitions.h}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdbool.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Clientes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Artigos}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Encomendas}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Runtime}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SC}\~ 25\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ficheiro {\b main.c}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numberOfDigits} (int num)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ficheiro {\b util.c}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearScreen} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permite limpar o ecr\'E3 de forma "port\'E1til" entre sistemas. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pressEnter} (bool alsoClearScreen)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permite dar a op\'E7\'E3o do tipico "Press Enter to continue". }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getDateInfo} (int info)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obter certo par\'E2metro de data tal como hora, dia, m\'EAs, ano. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b checkString} (const char *string)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se a string indicada \'E9 v\'E1lida tendo em contas certas condi\'E7\'F5es. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b checkNumber} (double number)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Controlar o inteiro indicado pelo utilizador. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b checkCodPromo} (char *codPromo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se o c\'F3digo promocional introduzido pelo utilizador \'E9 valido. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b availableForOperation} (int op, int codArtigo, int parameter)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se o artigo OU par\'E2metro indicado est\'E1 dispon\'EDvel ou \'E9 valido para X opera\'E7\'E3o. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getArtigoIndex} (int codArtigo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite obter o ind\'EDce de um artigo no array. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b loggedClient} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se existe utilizador autenticado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reallocStruct} (int st)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b freeMemory} (bool alsoStopTheProgram)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Liberta a mem\'F3ria antes de fechar o programa e/ou termina o programa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b listEncomendas} (int queryType)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite listar as encomendas. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b statisticsEncomendas} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estatisticas das encomendas. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getTotalEncomenda} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite obter o total (pre\'E7o) de encomendas. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b listClientes} (int queryType)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite listar o(s) cliente(s) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b listArtigos} (int queryType)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite listar o(s) artigo(s) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b getArtigoName} (int codArtigo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite obter o nome do artigo. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printDataEncomenda} (int enc)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime os dados de uma encomenda. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printDataArtigo} (int art, bool query)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime os dados de um artigo. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printDataCliente} (int cli)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime os dados de um cliente. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addCliente} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite adicionar um cliente. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getEstadoCliente} (int codCliente)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que verifica o estado do cliente indicado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b getClientName} (int codCliente)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que obt\'EAm o nome do cliente. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateClient} (int clienteToChange, int via)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite atualizar um cliente. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateArtigo} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de atualiza\'E7\'E3o de artigo e os seus valores. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addArtigo} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite adicionar um artigo. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateDesconto} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de atualiza\'E7\'E3o do valor e c\'F3digo de desconto. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b importData} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Importa os dados dos ficheiros bin\'E1rios. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b exportData} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exporta os dados dos ficheiros bin\'E1rios. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b importDefaultData} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Importa os dados padr\'E3o (default.bin) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b exportDefaultData} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exporta os dados padr\'E3o do programa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b deleteData} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Apaga todos os dados em mem\'F3ria do programa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b exportEncomendas} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exporta as encomendas para um ficheiro CSV. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loginClient} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b logoutClient} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que desautentica certo utilizador. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b doShopping} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que adiciona uma encomenda, ou seja uma compra. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b getEstadoEncomenda} (int estado)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retornar o estado de certa encomenda. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cancelEncomenda} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite cancelar uma encomenda. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b white} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b red} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b green} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b blue} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b yellow} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b purple} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cyan} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b bold} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b boldRed} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b NC}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b NA}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b NE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Clientes} * {\b cliente}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Artigos} * {\b artigo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Encomendas} * {\b encomenda}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Runtime} * {\b runtime}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v SC\:definitions.h}
{\xe \v definitions.h\:SC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SC\~ 25}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b definitions.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v addArtigo\:definitions.h}
{\xe \v definitions.h\:addArtigo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void addArtigo ()}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite adicionar um artigo. }}\par
{
Definition at line {\b 12} of file {\b administrador.c}.}\par
}
{\xe \v addCliente\:definitions.h}
{\xe \v definitions.h\:addCliente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void addCliente ()}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite adicionar um cliente. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Os} \cell }{parametros necessarios para a adi\'E7\'E3o do cliente \cell }
{\row }
}
}{
Definition at line {\b 16} of file {\b clientes.c}.}\par
}
{\xe \v availableForOperation\:definitions.h}
{\xe \v definitions.h\:availableForOperation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool availableForOperation (int  {\i op}, int  {\i codArtigo}, int  {\i parameter})}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se o artigo OU par\'E2metro indicado est\'E1 dispon\'EDvel ou \'E9 valido para X opera\'E7\'E3o. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
*\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
As opera\'E7\'F5es est\'E3o indicadas na enumera\'E7\'E3o \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true se a opera\'E7\'E3o/par\'E2metro \'E9 v\'E1lido, false caso contr\'E1rio \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O valor do return \'E9 usado no respetivo "loop do while" \par
}}}{
Definition at line {\b 118} of file {\b util.c}.}\par
}
{\xe \v blue\:definitions.h}
{\xe \v definitions.h\:blue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void blue ()}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bold\:definitions.h}
{\xe \v definitions.h\:bold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void bold ()}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v boldRed\:definitions.h}
{\xe \v definitions.h\:boldRed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void boldRed ()}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 44} of file {\b colors.c}.}\par
}
{\xe \v cancelEncomenda\:definitions.h}
{\xe \v definitions.h\:cancelEncomenda}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cancelEncomenda ()}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite cancelar uma encomenda. }}\par
{
Definition at line {\b 362} of file {\b shopping.c}.}\par
}
{\xe \v checkCodPromo\:definitions.h}
{\xe \v definitions.h\:checkCodPromo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool checkCodPromo (char *  {\i codPromo})}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se o c\'F3digo promocional introduzido pelo utilizador \'E9 valido. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
*\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true se o c\'F3digo for v\'E1lido, false caso contr\'E1rio \par
}}}{
Definition at line {\b 96} of file {\b util.c}.}\par
}
{\xe \v checkNumber\:definitions.h}
{\xe \v definitions.h\:checkNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool checkNumber (double  {\i number})}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Controlar o inteiro indicado pelo utilizador. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
*\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true se o inteiro for v\'E1lido, false caso contr\'E1rio \par
}}}{
Definition at line {\b 78} of file {\b util.c}.}\par
}
{\xe \v checkString\:definitions.h}
{\xe \v definitions.h\:checkString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool checkString (const char *  {\i string})}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se a string indicada \'E9 v\'E1lida tendo em contas certas condi\'E7\'F5es. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A string \'E9 v\'E1lida se:{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
n\'E3o estiver vazia e conter pelo menos 3 caracteres\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
n\'E3o cont\'E9m caracteres n\'FAmericos \par}
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true se a string for v\'E1lida, false caso contr\'E1rio \par
}}}{
Definition at line {\b 57} of file {\b util.c}.}\par
}
{\xe \v clearScreen\:definitions.h}
{\xe \v definitions.h\:clearScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void clearScreen ()}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permite limpar o ecr\'E3 de forma "port\'E1til" entre sistemas. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\par}
}{
Definition at line {\b 29} of file {\b util.c}.}\par
}
{\xe \v cyan\:definitions.h}
{\xe \v definitions.h\:cyan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cyan ()}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v deleteData\:definitions.h}
{\xe \v definitions.h\:deleteData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void deleteData ()}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Apaga todos os dados em mem\'F3ria do programa. }}\par
{
Definition at line {\b 274} of file {\b data.c}.}\par
}
{\xe \v doShopping\:definitions.h}
{\xe \v definitions.h\:doShopping}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void doShopping ()}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que adiciona uma encomenda, ou seja uma compra. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Verifica se j\'E1 existe um utilizador autenticado, e se existem artigos dispon\'EDveis \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Caso cliente n\'E3o esteja autenticado, e pretenda fazer compras\par
C\'E1lculo do pre\'E7o defaultPreco = (maoObra + custosFixos) * margemLucro\par
}{
Definition at line {\b 118} of file {\b shopping.c}.}\par
}
{\xe \v exportData\:definitions.h}
{\xe \v definitions.h\:exportData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void exportData ()}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exporta os dados dos ficheiros bin\'E1rios. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Caso surja algum erro na escrita, o programa termina \par
}}}{
Definition at line {\b 71} of file {\b data.c}.}\par
}
{\xe \v exportDefaultData\:definitions.h}
{\xe \v definitions.h\:exportDefaultData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void exportDefaultData ()}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exporta os dados padr\'E3o do programa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Coloca os dados padr\'E3o em mem\'F3ria e em seguida exporta para o ficheiro default.bin \par
}}}{
Definition at line {\b 149} of file {\b data.c}.}\par
}
{\xe \v exportEncomendas\:definitions.h}
{\xe \v definitions.h\:exportEncomendas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void exportEncomendas ()}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exporta as encomendas para um ficheiro CSV. }}\par
{
Definition at line {\b 239} of file {\b data.c}.}\par
}
{\xe \v freeMemory\:definitions.h}
{\xe \v definitions.h\:freeMemory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void freeMemory (bool  {\i alsoStopTheProgram})}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Liberta a mem\'F3ria antes de fechar o programa e/ou termina o programa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
*{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i alsoStopTheProgram} \cell }{- Op\'E7\'E3o de sa\'EDda do programa \cell }
{\row }
}
}{
Definition at line {\b 267} of file {\b util.c}.}\par
}
{\xe \v getArtigoIndex\:definitions.h}
{\xe \v definitions.h\:getArtigoIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int getArtigoIndex (int  {\i codArtigo})}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite obter o ind\'EDce de um artigo no array. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i codArtigo} \cell }{- C\'F3digo do artigo \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
art - Ind\'EDce do artigo \par
}}}{
Definition at line {\b 15} of file {\b queries.c}.}\par
}
{\xe \v getArtigoName\:definitions.h}
{\xe \v definitions.h\:getArtigoName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * getArtigoName (int  {\i idx})}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite obter o nome do artigo. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i idx} \cell }{- Indice no array de artigos \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
artigo - O nome do artigo \par
}}}{
Definition at line {\b 33} of file {\b queries.c}.}\par
}
{\xe \v getClientName\:definitions.h}
{\xe \v definitions.h\:getClientName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * getClientName (int  {\i codCliente})}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que obt\'EAm o nome do cliente. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ID} \cell }{do cliente \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna o nome do cliente (string) \par
}}}{
Definition at line {\b 254} of file {\b clientes.c}.}\par
}
{\xe \v getDateInfo\:definitions.h}
{\xe \v definitions.h\:getDateInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int getDateInfo (int  {\i info})}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obter certo par\'E2metro de data tal como hora, dia, m\'EAs, ano. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
*\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A enumera\'E7\'E3o \'E9 usada para indicar o par\'E2metro a obter \par
}}}{
Definition at line {\b 65} of file {\b queries.c}.}\par
}
{\xe \v getEstadoCliente\:definitions.h}
{\xe \v definitions.h\:getEstadoCliente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool getEstadoCliente (int  {\i codCliente})}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que verifica o estado do cliente indicado. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ID} \cell }{do cliente \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Retorna True - caso o cliente exista ou esteja disponivel False - caso o cliente n\'E3o exista ou esteja indisponivel \par
}}}{
Definition at line {\b 227} of file {\b clientes.c}.}\par
}
{\xe \v getEstadoEncomenda\:definitions.h}
{\xe \v definitions.h\:getEstadoEncomenda}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * getEstadoEncomenda (int  {\i estado})}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retornar o estado de certa encomenda. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i estado} \cell }{- O estado de do artigo em int (ex: artigo[1].estado) \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Dispon\'EDvel ou Indispon\'EDvel (string) \par
}}}{
Definition at line {\b 17} of file {\b shopping.c}.}\par
}
{\xe \v getTotalEncomenda\:definitions.h}
{\xe \v definitions.h\:getTotalEncomenda}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double getTotalEncomenda ()}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite obter o total (pre\'E7o) de encomendas. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
int - total de encomendas \par
}}}{
Definition at line {\b 44} of file {\b queries.c}.}\par
}
{\xe \v green\:definitions.h}
{\xe \v definitions.h\:green}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void green ()}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v importData\:definitions.h}
{\xe \v definitions.h\:importData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void importData ()}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Importa os dados dos ficheiros bin\'E1rios. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Caso nao exista algum ficheiro ou caso surja erro na leitura, o programa termina \par
}}}{
Definition at line {\b 15} of file {\b data.c}.}\par
}
{\xe \v importDefaultData\:definitions.h}
{\xe \v definitions.h\:importDefaultData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void importDefaultData ()}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Importa os dados padr\'E3o (default.bin) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Caso o ficheiro n\'E3o exista a fun\'E7\'E3o {\b exportDefaultData()} \'E9 chamada para criar o ficheiro com os dados padr\'E3o \par
}}}{
Definition at line {\b 115} of file {\b data.c}.}\par
}
{\xe \v listArtigos\:definitions.h}
{\xe \v definitions.h\:listArtigos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void listArtigos (int  {\i queryType})}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite listar o(s) artigo(s) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i queryType} \cell }{- op\'E7\'E3o de listagem \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
- a op\'E7\'E3o (10) \'E9 quando o cliente autenticado pretende listar as encomendas da sess\'E3o \par
}}}{
Definition at line {\b 95} of file {\b queries.c}.}\par
}
{\xe \v listClientes\:definitions.h}
{\xe \v definitions.h\:listClientes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void listClientes (int  {\i queryType})}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite listar o(s) cliente(s) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i queryType} \cell }{- op\'E7\'E3o de listagem \cell }
{\row }
}
}{
Definition at line {\b 218} of file {\b queries.c}.}\par
}
{\xe \v listEncomendas\:definitions.h}
{\xe \v definitions.h\:listEncomendas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void listEncomendas (int  {\i queryType})}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite listar as encomendas. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i queryType} \cell }{- Tipo de "query" a ser executada \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
De acordo com o tipo de "query" definido na enumera\'E7\'E3o, a fun\'E7\'E3o lista as encomendas \par
Por exemplo, a "query" (61) lista todas as encomendas de todos os clientes \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Permite listar as encomendas de certo cliente, este que \'E9 indicado via Nome ou pelo seu C\'F3digo\par
Permite listar as encomendas de acordo com certa data\par
}}}{
Definition at line {\b 208} of file {\b shopping.c}.}\par
}
{\xe \v loggedClient\:definitions.h}
{\xe \v definitions.h\:loggedClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool loggedClient ()}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se existe utilizador autenticado. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
*\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true se existe utilizador autenticado, false caso contr\'E1rio \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
N\'E3o existe cliente logado\par
}{
Definition at line {\b 217} of file {\b util.c}.}\par
}
{\xe \v loginClient\:definitions.h}
{\xe \v definitions.h\:loginClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void loginClient ()}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v logoutClient\:definitions.h}
{\xe \v definitions.h\:logoutClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void logoutClient ()}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que desautentica certo utilizador. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Verifica se j\'E1 existe um utilizador autenticado \par
}}}{
Definition at line {\b 97} of file {\b shopping.c}.}\par
}
{\xe \v main\:definitions.h}
{\xe \v definitions.h\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ficheiro {\b main.c}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ficheiro {\b main.c}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
tipoUtilizador - valores possiveis: 1 - Cliente, 2 - Administrador ou 0 - Sair \par
Esta \'E9 a primeira fun\'E7\'E3o a ser executada \par
}}}{
Definition at line {\b 29} of file {\b main.c}.}\par
}
{\xe \v numberOfDigits\:definitions.h}
{\xe \v definitions.h\:numberOfDigits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int numberOfDigits (int  {\i num})}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ficheiro {\b util.c}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ficheiro {\b util.c}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Usado, por exemplo, para verificar o NIF do cliente \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O n\'FAmero de digitos do inteiro para usar no respetivo "loop do while" \par
}}}{
Definition at line {\b 15} of file {\b util.c}.}\par
}
{\xe \v pressEnter\:definitions.h}
{\xe \v definitions.h\:pressEnter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pressEnter (bool  {\i alsoClearScreen})}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permite dar a op\'E7\'E3o do tipico "Press Enter to continue". }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\par}
}{
Definition at line {\b 37} of file {\b util.c}.}\par
}
{\xe \v printDataArtigo\:definitions.h}
{\xe \v definitions.h\:printDataArtigo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printDataArtigo (int  {\i art}, bool  {\i printTamanhos})}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime os dados de um artigo. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i art} \cell }{- Artigo a imprimir \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i printTamanhas} \cell }{- Define se os tamanhos e os respetivos pre\'E7os devem ser imprimidos \cell }
{\row }
}
}{
Definition at line {\b 462} of file {\b queries.c}.}\par
}
{\xe \v printDataCliente\:definitions.h}
{\xe \v definitions.h\:printDataCliente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printDataCliente (int  {\i cli})}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime os dados de um cliente. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cli} \cell }{- Cliente a imprimir \cell }
{\row }
}
}{
Definition at line {\b 493} of file {\b queries.c}.}\par
}
{\xe \v printDataEncomenda\:definitions.h}
{\xe \v definitions.h\:printDataEncomenda}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printDataEncomenda (int  {\i enc})}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime os dados de uma encomenda. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i enc} \cell }{- Encomenda a imprimir \cell }
{\row }
}
}{
Definition at line {\b 445} of file {\b queries.c}.}\par
}
{\xe \v purple\:definitions.h}
{\xe \v definitions.h\:purple}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void purple ()}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v reallocStruct\:definitions.h}
{\xe \v definitions.h\:reallocStruct}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void reallocStruct (int  {\i st})}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 229} of file {\b util.c}.}\par
}
{\xe \v red\:definitions.h}
{\xe \v definitions.h\:red}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void red ()}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v statisticsEncomendas\:definitions.h}
{\xe \v definitions.h\:statisticsEncomendas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void statisticsEncomendas ()}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estatisticas das encomendas. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
M\'E9dia do Pre\'E7o e Quantidade \par
Melhor e Pior produto (em termos de vendas) \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Encontrar as m\'E9dias (pre\'E7o e quantidade) das encomendas\par
Encontrar o produto mais vendido\par
Encontrar o produto menos vendido\par
Encontrar o cliente com mais unidades compradas\par
Encontrar o artigo com maior margem de lucro\par
Encontrar o artigo com menor margem de lucro\par
Encontrar a quantidade de encomendas ativas/canceladas\par
}}}{
Definition at line {\b 290} of file {\b queries.c}.}\par
}
{\xe \v updateArtigo\:definitions.h}
{\xe \v definitions.h\:updateArtigo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updateArtigo ()}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de atualiza\'E7\'E3o de artigo e os seus valores. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
artigoToUpdate - Artigo a atualizar \par
opcao - Campo a alterar \par
novoXXX - Novo valor a ser atribuido \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'96 Recalcula o pre\'E7o de todos os artigos de acordo com os novos valores\par
}}}{
Definition at line {\b 101} of file {\b administrador.c}.}\par
}
{\xe \v updateClient\:definitions.h}
{\xe \v definitions.h\:updateClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updateClient (int  {\i clienteToChange}, int  {\i via})}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite atualizar um cliente. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i clienteToChange} \cell }{- Cliente a ser atualizado \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i via} \cell }{- caso a fun\'E7\'E3o seja chamada via menu cliente, apenas permitir a altera\'E7\'E3o do cliente autenticado (e perguntando o seu c\'F3digo) \cell }
{\row }
}
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Via Menu Cliente, onde se realiza verifica\'E7\'E3o de seguran\'E7a\par
Via Menu Administrador\par
}}}{
Definition at line {\b 82} of file {\b clientes.c}.}\par
}
{\xe \v updateDesconto\:definitions.h}
{\xe \v definitions.h\:updateDesconto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updateDesconto ()}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de atualiza\'E7\'E3o do valor e c\'F3digo de desconto. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
runtime->percentageDesconto - Percentagem de desconto \par
runtime->stringDesconto - C\'F3digo de desconto \par
}}}{
Definition at line {\b 332} of file {\b administrador.c}.}\par
}
{\xe \v white\:definitions.h}
{\xe \v definitions.h\:white}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void white ()}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v yellow\:definitions.h}
{\xe \v definitions.h\:yellow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void yellow ()}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v artigo\:definitions.h}
{\xe \v definitions.h\:artigo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Artigos}* artigo{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b main.c}.}\par
}
{\xe \v cliente\:definitions.h}
{\xe \v definitions.h\:cliente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Clientes}* cliente{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b main.c}.}\par
}
{\xe \v encomenda\:definitions.h}
{\xe \v definitions.h\:encomenda}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Encomendas}* encomenda{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b main.c}.}\par
}
{\xe \v NA\:definitions.h}
{\xe \v definitions.h\:NA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int NA{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b main.c}.}\par
}
{\xe \v NC\:definitions.h}
{\xe \v definitions.h\:NC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int NC{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b main.c}.}\par
}
{\xe \v NE\:definitions.h}
{\xe \v definitions.h\:NE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int NE{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b main.c}.}\par
}
{\xe \v runtime\:definitions.h}
{\xe \v definitions.h\:runtime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Runtime}* runtime{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
definitions.h\par \pard\plain 
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef FUNCTIONS_H}\par
00002 {\cf21 #define FUNCTIONS_H}\par
00003 {\cf21 #include <stdbool.h>}\par
00004 \par
00005 {\cf21 #define SC 25}\par
00006 {\cf17 extern} {\cf18 int} NC;\par
00007 {\cf17 extern} {\cf18 int} NA;\par
00008 {\cf17 extern} {\cf18 int} NE;\par
00009 \par
00010 {\cf21 #pragma region Structs}\par
00011 {\cf17 typedef} {\cf17 struct}\par
00012 \{\par
00013     {\cf18 int} codCliente;\par
00014     {\cf18 char} nome[SC];\par
00015     {\cf18 int} nif;\par
00016     {\cf18 char} pais[SC];\par
00017     {\cf18 bool} estado;\par
00018 \} Clientes;\par
00019 \par
00020 {\cf17 typedef} {\cf17 struct }\{\par
00021     {\cf18 int} codArtigo;\par
00022     {\cf18 char} artigo[SC];\par
00023     {\cf18 double} maoObra;\par
00024     {\cf18 double} custosFixos;\par
00025     {\cf18 double} margemLucro;\par
00026     {\cf18 int} tamanhos[2];\par
00027     {\cf18 double} defaultPreco;\par
00028     {\cf18 double} incrementoPreco;\par
00029     {\cf18 bool} estado;\par
00030     {\cf18 double} tamanhoPreco[15][2];\par
00031 \} Artigos;\par
00032 \par
00033 {\cf17 typedef} {\cf17 struct }\{\par
00034     {\cf18 int} codEncomenda;\par
00035     {\cf18 int} codCliente;\par
00036     {\cf18 int} codArtigo;\par
00037     {\cf18 int} tamanho;\par
00038     {\cf18 int} horaminuto;\par
00039     {\cf18 int} dia;\par
00040     {\cf18 int} mes;\par
00041     {\cf18 int} ano;\par
00042     {\cf18 int} quantidade;\par
00043     {\cf18 double} total;\par
00044     {\cf18 bool} estado;\par
00045 \} Encomendas;\par
00046 \par
00047 {\cf17 typedef} {\cf17 struct }\{\par
00048     {\cf18 int} currentClient;\par
00049     {\cf18 char} stringDesconto[7];\par
00050     {\cf18 double} percentageDesconto;\par
00051 \} Runtime;\par
00052 \par
00053 {\cf17 extern} Clientes *cliente;\par
00054 {\cf17 extern} Artigos *artigo;\par
00055 {\cf17 extern} Encomendas *encomenda;\par
00056 {\cf17 extern} Runtime *runtime;\par
00057 \par
00058 {\cf21 #pragma endregion}\par
00059 \par
00060 {\cf21 #pragma region Functions}\par
00062 {\cf18 int} main();\par
00063 \par
00064 \par
00066 {\cf18 int} numberOfDigits({\cf18 int} num);\par
00067 \par
00068 {\cf18 void} clearScreen();\par
00069 {\cf18 void} pressEnter({\cf18 bool} alsoClearScreen);\par
00070 \par
00071 {\cf18 int} getDateInfo({\cf18 int} info);\par
00072 {\cf18 bool} checkString({\cf17 const} {\cf18 char}* {\cf18 string});\par
00073 {\cf18 bool} checkNumber({\cf18 double} number);\par
00074 {\cf18 bool} checkCodPromo({\cf18 char}* codPromo);\par
00075 {\cf18 bool} availableForOperation({\cf18 int} op, {\cf18 int} codArtigo, {\cf18 int} parameter);\par
00076 {\cf18 int} getArtigoIndex({\cf18 int} codArtigo);\par
00077 \par
00078 {\cf18 bool} loggedClient();\par
00079 \par
00080 {\cf18 void} reallocStruct({\cf18 int} st);\par
00081 {\cf18 void} freeMemory({\cf18 bool} alsoStopTheProgram);\par
00082 \par
00083 \par
00084 \par
00085 {\cf20 // Ficheiro queries.c}\par
00086 {\cf18 void} listEncomendas({\cf18 int} queryType);\par
00087 {\cf18 void} statisticsEncomendas();\par
00088 {\cf18 double} getTotalEncomenda();\par
00089 \par
00090 {\cf18 void} listClientes({\cf18 int} queryType);\par
00091 {\cf18 void} listArtigos({\cf18 int} queryType);\par
00092 \par
00093 {\cf18 char}* getArtigoName({\cf18 int} codArtigo);\par
00094 {\cf18 void} printDataEncomenda({\cf18 int} enc);\par
00095 {\cf18 void} printDataArtigo({\cf18 int} art, {\cf18 bool} query);\par
00096 {\cf18 void} printDataCliente({\cf18 int} cli);\par
00097 \par
00098 \par
00099 \par
00100 {\cf20 // Ficheiro clientes.c}\par
00101 {\cf18 void} addCliente();\par
00102 {\cf18 bool} getEstadoCliente({\cf18 int} codCliente);\par
00103 {\cf18 char}* getClientName({\cf18 int} codCliente);\par
00104 {\cf18 void} updateClient({\cf18 int} clienteToChange, {\cf18 int} via);\par
00105 \par
00106 \par
00107 \par
00108 {\cf20 // Ficheiro administrador.c}\par
00109 {\cf18 void} updateArtigo();\par
00110 {\cf18 void} addArtigo();\par
00111 {\cf18 void} updateDesconto();\par
00112 \par
00113 \par
00114 \par
00115 {\cf20 // Ficheiro data.c}\par
00116 {\cf18 void} importData();\par
00117 {\cf18 void} exportData();\par
00118 {\cf18 void} importDefaultData();\par
00119 {\cf18 void} exportDefaultData();\par
00120 {\cf18 void} deleteData();\par
00121 {\cf18 void} exportEncomendas();\par
00122 \par
00123 \par
00124 {\cf20 // Ficheiro shopping.c}\par
00125 {\cf18 void} loginClient(), logoutClient();\par
00126 {\cf18 void} doShopping();\par
00127 {\cf18 char} *getEstadoEncomenda({\cf18 int} estado);\par
00128 {\cf18 void} cancelEncomenda();\par
00129 \par
00130 \par
00131 {\cf20 // Ficheiro colors.c}\par
00132 {\cf18 void} white(), red(), green(), blue(), yellow(), purple(), cyan(), bold(), boldRed();\par
00133 {\cf21 #pragma endregion}\par
00134 \par
00135 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c File Reference\par \pard\plain 
{\tc\tcl2 \v main.c}
{\xe \v main.c}
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <stdbool.h>}\par
{\f2 #include "definitions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o Main do programa. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b NC} = -1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b NA} = -1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b NE} = -1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Clientes} * {\b cliente}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Artigos} * {\b artigo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Encomendas} * {\b encomenda}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Runtime} * {\b runtime}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:main.c}
{\xe \v main.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o Main do programa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ficheiro {\b main.c}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
tipoUtilizador - valores possiveis: 1 - Cliente, 2 - Administrador ou 0 - Sair \par
Esta \'E9 a primeira fun\'E7\'E3o a ser executada \par
}}}{
Definition at line {\b 29} of file {\b main.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v artigo\:main.c}
{\xe \v main.c\:artigo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Artigos}* artigo}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b main.c}.}\par
}
{\xe \v cliente\:main.c}
{\xe \v main.c\:cliente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Clientes}* cliente}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b main.c}.}\par
}
{\xe \v encomenda\:main.c}
{\xe \v main.c\:encomenda}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Encomendas}* encomenda}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b main.c}.}\par
}
{\xe \v NA\:main.c}
{\xe \v main.c\:NA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int NA = -1}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b main.c}.}\par
}
{\xe \v NC\:main.c}
{\xe \v main.c\:NC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int NC = -1}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b main.c}.}\par
}
{\xe \v NE\:main.c}
{\xe \v main.c\:NE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int NE = -1}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b main.c}.}\par
}
{\xe \v runtime\:main.c}
{\xe \v main.c\:runtime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Runtime}* runtime}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00002 {\cf21 #include <stdio.h>}\par
00003 {\cf21 #include <stdlib.h>}\par
00004 {\cf21 #include <string.h>}\par
00005 {\cf21 #include <stdbool.h>}\par
00006 \par
00013 {\cf21 #include "definitions.h"}\par
00014 \par
00015 {\cf18 int} NC = -1;\par
00016 {\cf18 int} NA = -1;\par
00017 {\cf18 int} NE = -1;\par
00018 \par
00019 Clientes *cliente;\par
00020 Artigos *artigo;\par
00021 Encomendas *encomenda;\par
00022 Runtime *runtime;\par
00023 \par
00024 {\cf20 /* =========================== MAIN =========================== */}\par
00029 {\cf18 int} main() \par
00030 \{\par
00031     {\cf18 int} op, opcao;\par
00032 \par
00033     {\cf20 // Ignorar [CTRL + C]}\par
00034     {\cf20 // signal(SIGINT, SIG_IGN);}\par
00035 \par
00036     {\cf20 // Aloca\'E7\'E3o da mem\'F3ria para as estruturas}\par
00037     cliente = malloc({\cf17 sizeof}(cliente) * (NC + 1));\par
00038     artigo = malloc({\cf17 sizeof}(artigo) * (NA + 1));\par
00039     encomenda = malloc({\cf17 sizeof}(encomenda) * (NE + 1));\par
00040     runtime = malloc({\cf17 sizeof}(runtime));\par
00041 \par
00042     {\cf20 // Permitir que os artigos "default" sejam utilizados}\par
00043     importDefaultData();\par
00044     \par
00045     {\cf19 do} \{\par
00046         white();\par
00047         blue(); printf({\cf22 "\\n////////"}); white(); printf({\cf22 " Menu "}); blue(); printf({\cf22 "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\n"}); \par
00048         green(); printf({\cf22 "  [1] Clientes e Vendas\\n"}); \par
00049         red(); printf({\cf22 "  [2] Administra\'E7\'E3o\\n"}); white();\par
00050         bold(); printf({\cf22 "\\n  [0] Sair\\n"}); white();\par
00051         printf({\cf22 "\\nTipo de Utilizador> "});\par
00052         scanf({\cf22 "%d"}, &op);\par
00053         {\cf19 switch} (op) \{\par
00054             {\cf19 case} 0:\par
00055                 blue(); printf({\cf22 "\\nObrigado por comprar na nossa loja :)\\n"}); white();\par
00056                 freeMemory({\cf17 true});\par
00057                 {\cf19 break};\par
00058 \par
00059             {\cf19 case} 1:\par
00060                 clearScreen();\par
00061                 green(); printf({\cf22 "\\n[!] Bem-vindo Cliente [!]\\n"}); white();\par
00062                 {\cf19 do}\par
00063                 \{\par
00064                     green(); printf({\cf22 "\\n////////"}); white(); printf({\cf22 " Menu Cliente "}); green(); printf({\cf22 "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n"}); white();\par
00065                     printf({\cf22 "\\n[1] Realizar Compras\\n"});\par
00066                     printf({\cf22 "[2] Registo Cliente\\n"});\par
00067                     printf({\cf22 "[3] Mostrar as minhas Encomendas\\n"});\par
00068                     printf({\cf22 "[4] Alterar Informa\'E7\'E3o de Cliente\\n"});\par
00069                     green(); printf({\cf22 "[5] Login\\n"}); white();\par
00070                     yellow(); printf({\cf22 "[6] Logout\\n"}); white();\par
00071                     boldRed(); printf({\cf22 "[7] Cancelar Encomenda\\n"}); white();\par
00072                     bold(); printf({\cf22 "[0] Voltar\\n"}); white();\par
00073                     red(); printf({\cf22 "[9] SAIR\\n"}); white();\par
00074 \par
00075                     printf({\cf22 "\\nOp\'E7\'E3o: "});\par
00076                     scanf({\cf22 "%d"}, &opcao);\par
00077 \par
00078                     {\cf19 switch} (opcao)\par
00079                     \{\par
00080                         {\cf19 case} 0:\par
00081                             clearScreen();\par
00082                             {\cf19 break};\par
00083                         {\cf19 case} 1:\par
00084                             doShopping();\par
00085                             {\cf19 break};\par
00086                         {\cf19 case} 2:\par
00087                             addCliente();\par
00088                             {\cf19 break};\par
00089                         {\cf19 case} 3:\par
00090                             listEncomendas(60);\par
00091                             {\cf19 break};\par
00092                         {\cf19 case} 4:\par
00093                             updateClient(0, 1);\par
00094                             {\cf19 break};\par
00095                         {\cf19 case} 5:\par
00096                             loginClient();\par
00097                             {\cf19 break};\par
00098                         {\cf19 case} 6:\par
00099                             logoutClient();\par
00100                             {\cf19 break};\par
00101                         {\cf19 case} 7:\par
00102                             cancelEncomenda();\par
00103                             {\cf19 break};\par
00104 \par
00105                         {\cf19 case} 9:\par
00106                             blue(); printf({\cf22 "\\nObrigado por comprar na nossa loja :)\\n"}); white();\par
00107                             freeMemory({\cf17 true});\par
00108 \par
00109                         {\cf19 default}:\par
00110                             red(); printf({\cf22 "\\n[!] Op\'E7\'E3o Inv\'E1lida [!]"}); white();\par
00111                             pressEnter({\cf17 true});\par
00112                             {\cf19 break};\par
00113                     \}\par
00114                 \} {\cf19 while} (opcao != 0);\par
00115                 {\cf19 break};\par
00116 \par
00117             {\cf19 case} 2:\par
00118                 clearScreen();\par
00119                 boldRed(); printf({\cf22 "\\n[!] Bem-vindo Administrador [!]\\n"}); white();\par
00120                 {\cf19 do}\par
00121                 \{\par
00122                     red(); printf({\cf22 "\\n////////"}); white(); printf({\cf22 " Menu Administrador "}); red(); printf({\cf22 "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\n"}); white();\par
00123                     cyan(); printf({\cf22 "[[ Listagem de Artigos ]]\\n"}); white();\par
00124                     printf({\cf22 "  [11] Geral\\n"});\par
00125                     printf({\cf22 "  [12] Completa\\n"});\par
00126                     printf({\cf22 "  [13] Espec\'EDfica\\n"});\par
00127                     cyan(); printf({\cf22 "\\n[[ Gest\'E3o de Artigos ]]\\n"}); white();\par
00128                     printf({\cf22 "  [21] Adicionar\\n"});\par
00129                     printf({\cf22 "  [22] Atualizar\\n"});\par
00130                     printf({\cf22 "\\n[3] Gest\'E3o de Clientes\\n"});\par
00131                     printf({\cf22 "\\n[4] Gest\'E3o de Desconto\\n"});\par
00132                     cyan(); printf({\cf22 "\\n[[ Listagem de Clientes ]]\\n"}); white();\par
00133                     printf({\cf22 "  [51] Geral\\n"});\par
00134                     printf({\cf22 "  [52] Cliente Espec\'EDfico\\n"});\par
00135                     cyan(); printf({\cf22 "\\n[[ Listagem de Encomendas ]]\\n"}); white();\par
00136                     printf({\cf22 "  [61] Todas as Encomendas\\n"});\par
00137                     printf({\cf22 "  [62] Encomendas de certo cliente\\n"});\par
00138                     printf({\cf22 "  [63] Encomendas por intervalo de tempo\\n"});\par
00139                     bold(); printf({\cf22 "  [64] Estatisticas\\n"}); white();\par
00140                     cyan(); printf({\cf22 "  [65] Exportar Encomendas\\n"}); white();\par
00141                     bold(); printf({\cf22 "\\n\\n[0] Voltar\\n"}); white();\par
00142                     green(); printf({\cf22 "\\n[7] Importar Dados\\n"}); white();\par
00143                     yellow(); printf({\cf22 "\\n[8] Exportar Dados\\n"}); white();\par
00144                     boldRed(); printf({\cf22 "\\n[9] Eliminar Dados\\n"}); white();\par
00145                     red(); printf({\cf22 "\\n[10] Sair\\n"}); white();\par
00146 \par
00147                     printf({\cf22 "\\nOpc\'E3o: "});\par
00148                     scanf({\cf22 "%d"}, &opcao);\par
00149 \par
00150                     {\cf19 switch} (opcao) \{\par
00151                         {\cf19 case} 11: {\cf19 case} 12: {\cf19 case} 13:\par
00152                             listArtigos(opcao);\par
00153                             {\cf19 break};\par
00154                         {\cf19 case} 21:\par
00155                             addArtigo();\par
00156                             {\cf19 break};\par
00157                         {\cf19 case} 22:\par
00158                             updateArtigo();\par
00159                             {\cf19 break};\par
00160                         {\cf19 case} 3:\par
00161                             updateClient(0, 0);\par
00162                             {\cf19 break};\par
00163                         {\cf19 case} 4:\par
00164                             updateDesconto();\par
00165                             {\cf19 break};\par
00166                         {\cf19 case} 51: {\cf19 case} 52:\par
00167                             listClientes(opcao);\par
00168                             {\cf19 break};\par
00169                         {\cf19 case} 61: {\cf19 case} 62: {\cf19 case} 63:\par
00170                             listEncomendas(opcao);\par
00171                             {\cf19 break};\par
00172                         {\cf19 case} 64:\par
00173                             statisticsEncomendas();\par
00174                             {\cf19 break};\par
00175                         {\cf19 case} 65:\par
00176                             exportEncomendas();\par
00177                             {\cf19 break};\par
00178 \par
00179                         {\cf19 case} 7:\par
00180                             printf({\cf22 "\\nOs dados ser\'E3o importados. Isto ir\'E1 "});\par
00181                             red(); printf({\cf22 "apagar"}); white(); printf({\cf22 " todos os dados existentes n\'E3o guardados!\\n"});\par
00182                             red(); printf({\cf22 "Tem a certeza? [s/N]: "}); white();\par
00183                             {\cf18 char} confirm[2];\par
00184                             scanf({\cf22 " %c"}, confirm);\par
00185 \par
00186                             {\cf19 if} (strcmp(confirm, {\cf22 "s"}) == 0 || strcmp(confirm, {\cf22 "S"}) == 0)\par
00187                             \{\par
00188                                 importData();\par
00189                             \}\par
00190                             {\cf19 else}\par
00191                             \{\par
00192                                 yellow(); printf({\cf22 "\\n[!] Dados n\'E3o importados (cancelado pelo utilizador) [!]"}); white();\par
00193                                 pressEnter({\cf17 true});\par
00194                             \}\par
00195                             {\cf19 break};\par
00196 \par
00197                         {\cf19 case} 8:\par
00198                             exportData();\par
00199                             {\cf19 break};\par
00200                         {\cf19 case} 9:\par
00201                             deleteData();\par
00202                             {\cf19 break};\par
00203                         {\cf19 case} 0:\par
00204                             clearScreen();\par
00205                             {\cf19 break};\par
00206 \par
00207                         {\cf19 case} 10:\par
00208                             blue(); printf({\cf22 "\\nObrigado por comprar na nossa loja :)\\n"}); white();\par
00209                             freeMemory({\cf17 true});\par
00210                             {\cf19 break};\par
00211 \par
00212                         {\cf19 default}:\par
00213                             red(); printf({\cf22 "\\n[!] Op\'E7\'E3o Inv\'E1lida [!]"}); white();\par
00214                             pressEnter({\cf17 true});\par
00215                             {\cf19 break};\par
00216                     \}\par
00217                 \} {\cf19 while} (opcao != 0);\par
00218                 {\cf19 break};\par
00219                 \par
00220             {\cf19 default}:\par
00221                 red(); printf({\cf22 "\\n[!] Op\'E7\'E3o Inv\'E1lida [!]"}); white();\par
00222                 pressEnter({\cf17 true});\par
00223                 {\cf19 break};\par
00224         \}\par
00225     \} {\cf19 while} (op != 0);\par
00226     {\cf19 return} 0;\par
00227 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
queries.c File Reference\par \pard\plain 
{\tc\tcl2 \v queries.c}
{\xe \v queries.c}
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <stdbool.h>}\par
{\f2 #include <unistd.h>}\par
{\f2 #include <time.h>}\par
{\f2 #include "definitions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getArtigoIndex} (int codArtigo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite obter o ind\'EDce de um artigo no array. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b getArtigoName} (int idx)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite obter o nome do artigo. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getTotalEncomenda} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite obter o total (pre\'E7o) de encomendas. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getDateInfo} (int info)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obter certo par\'E2metro de data tal como hora, dia, m\'EAs, ano. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b listArtigos} (int queryType)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite listar o(s) artigo(s) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b listClientes} (int queryType)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite listar o(s) cliente(s) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b statisticsEncomendas} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estatisticas das encomendas. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printDataEncomenda} (int enc)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime os dados de uma encomenda. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printDataArtigo} (int art, bool printTamanhos)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime os dados de um artigo. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printDataCliente} (int cli)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime os dados de um cliente. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v getArtigoIndex\:queries.c}
{\xe \v queries.c\:getArtigoIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int getArtigoIndex (int  {\i codArtigo})}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite obter o ind\'EDce de um artigo no array. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i codArtigo} \cell }{- C\'F3digo do artigo \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
art - Ind\'EDce do artigo \par
}}}{
Definition at line {\b 15} of file {\b queries.c}.}\par
}
{\xe \v getArtigoName\:queries.c}
{\xe \v queries.c\:getArtigoName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * getArtigoName (int  {\i idx})}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite obter o nome do artigo. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i idx} \cell }{- Indice no array de artigos \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
artigo - O nome do artigo \par
}}}{
Definition at line {\b 33} of file {\b queries.c}.}\par
}
{\xe \v getDateInfo\:queries.c}
{\xe \v queries.c\:getDateInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int getDateInfo (int  {\i info})}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obter certo par\'E2metro de data tal como hora, dia, m\'EAs, ano. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
*\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A enumera\'E7\'E3o \'E9 usada para indicar o par\'E2metro a obter \par
}}}{
Definition at line {\b 65} of file {\b queries.c}.}\par
}
{\xe \v getTotalEncomenda\:queries.c}
{\xe \v queries.c\:getTotalEncomenda}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double getTotalEncomenda ()}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite obter o total (pre\'E7o) de encomendas. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
int - total de encomendas \par
}}}{
Definition at line {\b 44} of file {\b queries.c}.}\par
}
{\xe \v listArtigos\:queries.c}
{\xe \v queries.c\:listArtigos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void listArtigos (int  {\i queryType})}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite listar o(s) artigo(s) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i queryType} \cell }{- op\'E7\'E3o de listagem \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
- a op\'E7\'E3o (10) \'E9 quando o cliente autenticado pretende listar as encomendas da sess\'E3o \par
}}}{
Definition at line {\b 95} of file {\b queries.c}.}\par
}
{\xe \v listClientes\:queries.c}
{\xe \v queries.c\:listClientes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void listClientes (int  {\i queryType})}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite listar o(s) cliente(s) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i queryType} \cell }{- op\'E7\'E3o de listagem \cell }
{\row }
}
}{
Definition at line {\b 218} of file {\b queries.c}.}\par
}
{\xe \v printDataArtigo\:queries.c}
{\xe \v queries.c\:printDataArtigo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printDataArtigo (int  {\i art}, bool  {\i printTamanhos})}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime os dados de um artigo. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i art} \cell }{- Artigo a imprimir \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i printTamanhas} \cell }{- Define se os tamanhos e os respetivos pre\'E7os devem ser imprimidos \cell }
{\row }
}
}{
Definition at line {\b 462} of file {\b queries.c}.}\par
}
{\xe \v printDataCliente\:queries.c}
{\xe \v queries.c\:printDataCliente}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printDataCliente (int  {\i cli})}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime os dados de um cliente. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cli} \cell }{- Cliente a imprimir \cell }
{\row }
}
}{
Definition at line {\b 493} of file {\b queries.c}.}\par
}
{\xe \v printDataEncomenda\:queries.c}
{\xe \v queries.c\:printDataEncomenda}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printDataEncomenda (int  {\i enc})}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Imprime os dados de uma encomenda. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i enc} \cell }{- Encomenda a imprimir \cell }
{\row }
}
}{
Definition at line {\b 445} of file {\b queries.c}.}\par
}
{\xe \v statisticsEncomendas\:queries.c}
{\xe \v queries.c\:statisticsEncomendas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void statisticsEncomendas ()}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Estatisticas das encomendas. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
M\'E9dia do Pre\'E7o e Quantidade \par
Melhor e Pior produto (em termos de vendas) \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Encontrar as m\'E9dias (pre\'E7o e quantidade) das encomendas\par
Encontrar o produto mais vendido\par
Encontrar o produto menos vendido\par
Encontrar o cliente com mais unidades compradas\par
Encontrar o artigo com maior margem de lucro\par
Encontrar o artigo com menor margem de lucro\par
Encontrar a quantidade de encomendas ativas/canceladas\par
}}}{
Definition at line {\b 290} of file {\b queries.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
queries.c\par \pard\plain 
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdlib.h>}\par
00003 {\cf21 #include <string.h>}\par
00004 {\cf21 #include <stdbool.h>}\par
00005 {\cf21 #include <unistd.h>}\par
00006 {\cf21 #include <time.h>}\par
00007 \par
00008 {\cf21 #include "definitions.h"}\par
00009 \par
00010 {\cf21 #pragma region GetArtigoIndex}\par
00015 {\cf18 int} getArtigoIndex({\cf18 int} codArtigo)\par
00016 \{\par
00017     {\cf19 for} ({\cf18 int} art = 0; art <= NA; art++)\par
00018     \{\par
00019         {\cf19 if} (artigo[art].codArtigo == codArtigo)\par
00020         \{\par
00021             {\cf19 return} art;\par
00022         \}\par
00023     \}\par
00024     {\cf19 return} -1;\par
00025 \}\par
00026 {\cf21 #pragma endregion}\par
00027 \par
00028 {\cf21 #pragma region getArtigoName}\par
00033 {\cf18 char}* getArtigoName({\cf18 int} idx)\par
00034 \{         \par
00035     {\cf19 return} artigo[idx].artigo;\par
00036 \}\par
00037 {\cf21 #pragma endregion}\par
00038 \par
00039 {\cf21 #pragma region getTotalEncomenda}\par
00044 {\cf18 double} getTotalEncomenda()\par
00045 \{\par
00046     {\cf18 double} total = 0;\par
00047     {\cf19 for} ({\cf18 int} enc = 0; enc <= NE+1; enc++)\par
00048     \{\par
00049         {\cf19 if} (encomenda[enc].codCliente == runtime->currentClient)\par
00050         \{\par
00051             {\cf19 if} (encomenda[enc].estado)\par
00052             \{\par
00053                 total += encomenda[enc].total;\par
00054             \}\par
00055         \}\par
00056     \}\par
00057     {\cf19 return} total;\par
00058 \}\par
00059 {\cf21 #pragma endregion}\par
00060 \par
00061 {\cf21 #pragma region GetDateInfo}\par
00065 {\cf18 int} getDateInfo({\cf18 int} info)\par
00066 \{\par
00067     time_t t = time(NULL);\par
00068     {\cf17 struct }tm tm = *localtime(&t);\par
00069     {\cf19 switch} (info)\par
00070     \{\par
00071     {\cf17 enum} InfoQuery \{\par
00072         hourminute = 1,\par
00073         day = 2,\par
00074         month = 3,\par
00075         year = 4,\par
00076     \};\par
00077         {\cf19 case} hourminute:\par
00078             {\cf19 return} tm.tm_hour * 100 + tm.tm_min;\par
00079         {\cf19 case} day:\par
00080             {\cf19 return} tm.tm_mday;\par
00081         {\cf19 case} month:\par
00082             {\cf19 return} tm.tm_mon + 1;\par
00083         {\cf19 case} year:\par
00084             {\cf19 return} tm.tm_year + 1900;\par
00085     \}\par
00086     {\cf19 return} -1;\par
00087 \}\par
00088 {\cf21 #pragma endregion}\par
00089 \par
00090 {\cf21 #pragma region listArtigos}\par
00095 {\cf18 void} listArtigos({\cf18 int} queryType)\par
00096 \{   \par
00097     {\cf20 // queryType 10&11 = listar todos os artigos disponiveis com valores REDUZIDOS}\par
00098     {\cf20 // queryType 12 = listar todos os artigos disponiveis COM todos os valores}\par
00099     {\cf20 // queryType 13 = listar um artigo especifico COM todos os valories}\par
00100 \par
00101     {\cf17 enum} queryType \{\par
00102         reduzidaCompras = 10,\par
00103         reduzidaAdmin = 11,\par
00104         completa = 12,\par
00105         especifica = 13\par
00106     \};\par
00107 \par
00108     {\cf19 if} (NA == -1)\par
00109     \{\par
00110         red(); printf({\cf22 "\\n[!] N\'E3o existem artigos registados [!]"}); white();\par
00111         pressEnter({\cf17 true});\par
00112         {\cf19 return};\par
00113     \}\par
00114     {\cf18 int} count;\par
00115     cyan(); printf({\cf22 "\\n------------------------ Artigos ------------------------\\n"}); white();\par
00116     {\cf19 switch} (queryType)\par
00117     \{\par
00118         {\cf19 case} reduzidaCompras:\par
00119             {\cf19 for} ({\cf18 int} art = 0; art <= NA; art++)\par
00120             \{\par
00121                 {\cf19 if} (artigo[art].estado)\par
00122                 \{\par
00123                     printf({\cf22 "\\nArtigo: %s | C\'F3digo: %d"}, artigo[art].artigo, artigo[art].codArtigo);\par
00124                     printf({\cf22 "\\nPre\'E7o comum: %.2f"}, artigo[art].defaultPreco);\par
00125                     printf({\cf22 "|_ Tamanhos disponiveis: %d - %d\\n\\n"}, artigo[art].tamanhos[0], artigo[art].tamanhos[1]);\par
00126                 \}\par
00127             \}\par
00128             {\cf19 break};\par
00129 \par
00130         {\cf19 case} reduzidaAdmin:\par
00131             {\cf19 for} ({\cf18 int} art = 0; art <= NA; art++)\par
00132             \{\par
00133                 {\cf19 if} (artigo[art].estado)\par
00134                 \{\par
00135                     printDataArtigo(art, {\cf17 false});\par
00136                 \}\par
00137             \}\par
00138             printf({\cf22 "\\nTotal de Artigos - %d\\n"}, NA + 1);\par
00139             \par
00140             {\cf19 if} (queryType == reduzidaAdmin)\par
00141             \{\par
00142                 pressEnter({\cf17 true});\par
00143             \}\par
00144             {\cf19 break};\par
00145 \par
00146         {\cf19 case} completa:\par
00147             {\cf19 for} ({\cf18 int} art = 0; art <= NA; art++)\par
00148             \{\par
00149                 printDataArtigo(art, {\cf17 true});\par
00150                 \par
00151             \}\par
00152             printf({\cf22 "\\nTotal de Artigos - %d\\n"}, NA + 1);\par
00153             pressEnter({\cf17 true});\par
00154             {\cf19 break};\par
00155         \par
00156         {\cf19 case} especifica:\par
00157             printf({\cf22 "\\nPesquisar Artigo por (N)ome ou (C)\'F3digo? "});\par
00158             {\cf18 char} internalQueryType[5];\par
00159             scanf({\cf22 " %s"}, internalQueryType);\par
00160             {\cf19 if} (strcmp(internalQueryType, {\cf22 "n"}) == 0 || strcmp(internalQueryType, {\cf22 "N"}) == 0)\par
00161             \{\par
00162                 printf({\cf22 "\\nPesquisar por Nome: "});\par
00163                 {\cf18 char} nomePesquisa[SC];\par
00164                 scanf({\cf22 " %s"}, nomePesquisa);\par
00165                 count = 0;\par
00166                 {\cf19 for} ({\cf18 int} art = 0; art <= NA; art++)\par
00167                 \{\par
00168                     {\cf19 if} (artigo[art].estado && (strcmp(artigo[art].artigo, nomePesquisa) == 0))\par
00169                     \{\par
00170                         printDataArtigo(art, {\cf17 true});\par
00171                         count++;\par
00172                     \}\par
00173                 \}\par
00174                 {\cf19 if} (count == 0)\par
00175                 \{\par
00176                     red(); printf({\cf22 "\\n[!] N\'E3o existem artigos com esse nome [!]"}); white();\par
00177                     pressEnter({\cf17 true});\par
00178                     {\cf19 return};\par
00179                 \}\par
00180             \}\par
00181             {\cf19 else} {\cf19 if} (strcmp(internalQueryType, {\cf22 "c"}) == 0 || strcmp(internalQueryType, {\cf22 "C"}) == 0)\par
00182             \{\par
00183                 printf({\cf22 "\\nPesquisar por C\'F3digo: "});\par
00184                 {\cf18 int} codigoPesquisa;\par
00185                 scanf({\cf22 "%d"}, &codigoPesquisa);\par
00186                 count = 0;\par
00187                 {\cf19 for} ({\cf18 int} art = 0; art <= NA; art++)\par
00188                 \{\par
00189                     {\cf19 if} (artigo[art].estado && (artigo[art].codArtigo == codigoPesquisa))\par
00190                     \{\par
00191                         printDataArtigo(art, {\cf17 true});\par
00192                         count++;\par
00193                         {\cf19 break};\par
00194                     \}\par
00195                 \}\par
00196                 {\cf19 if} (count == 0)\par
00197                 \{\par
00198                     red(); printf({\cf22 "\\n[!] N\'E3o existem artigos com esse c\'F3digo [!]"}); white();\par
00199                     pressEnter({\cf17 true});\par
00200                     {\cf19 return};\par
00201                 \}\par
00202             \} {\cf19 else} \{\par
00203                 red(); printf({\cf22 "\\n[!] Op\'E7\'E3o Inv\'E1lida [!]"}); white();\par
00204                 pressEnter({\cf17 true});\par
00205                 {\cf19 return};\par
00206             \}\par
00207         printf({\cf22 "\\nTotal de Artigos - %d"}, NA + 1);\par
00208         pressEnter({\cf17 true});\par
00209         {\cf19 break};\par
00210     \}\par
00211 \}\par
00212 {\cf21 #pragma endregion}\par
00213 \par
00214 {\cf21 #pragma region listClientes}\par
00218 {\cf18 void} listClientes({\cf18 int} queryType)\par
00219 \{\par
00220     {\cf19 if} (NC == -1)\par
00221     \{\par
00222         red(); printf({\cf22 "\\n[!] N\'E3o existem clientes registados [!]"}); white();\par
00223         pressEnter({\cf17 true});\par
00224         {\cf19 return};\par
00225     \}\par
00226     {\cf17 enum} queryType \{\par
00227         todos = 51,\par
00228         especifico = 52,\par
00229         autoQuery = 53\par
00230     \};\par
00231 \par
00232     cyan(); printf({\cf22 "\\n------------------------ Clientes ------------------------\\n"}); white();\par
00233     {\cf19 switch} (queryType)\par
00234     \{\par
00235         {\cf19 case} todos:\par
00236             {\cf19 for} ({\cf18 int} user = 0; user <= NC; user++)\par
00237             \{\par
00238                 {\cf19 if} (cliente[user].estado)\par
00239                 \{\par
00240                     printDataCliente(user);                   \par
00241                 \}\par
00242             \}\par
00243             {\cf19 break};\par
00244 \par
00245         {\cf19 case} especifico:\par
00246             printf({\cf22 "Pesquisar Cliente por (N)ome ou (C)\'F3digo? "});\par
00247             {\cf18 char} internalQueryType[SC];\par
00248             scanf({\cf22 " %s"}, internalQueryType);\par
00249             {\cf19 if} (strcmp(internalQueryType, {\cf22 "N"}) == 0 || strcmp(internalQueryType, {\cf22 "n"}) == 0)\par
00250             \{\par
00251                 printf({\cf22 "\\nNome: "});\par
00252                 {\cf18 char} nome[50];\par
00253                 scanf({\cf22 " %50s"}, nome);\par
00254                 {\cf19 for} ({\cf18 int} user = 0; user <= NC; user++)\par
00255                 \{\par
00256                     {\cf19 if} (cliente[user].estado)\par
00257                     \{\par
00258                         {\cf19 if} (strcmp(cliente[user].nome, nome) == 0)\par
00259                         \{\par
00260                             printDataCliente(user);\par
00261                         \}\par
00262                     \}\par
00263                 \}\par
00264             \}\par
00265             {\cf19 else} {\cf19 if} (strcmp(internalQueryType, {\cf22 "C"}) == 0 || strcmp(internalQueryType, {\cf22 "c"}) == 0)\par
00266             \{\par
00267                 printf({\cf22 "\\nC\'F3digo Cliente: "});\par
00268                 {\cf18 int} codCliente;\par
00269                 scanf({\cf22 "%d"}, &codCliente);\par
00270                 {\cf19 for} ({\cf18 int} user = 0; user <= NC; user++)\par
00271                 \{\par
00272                     {\cf19 if} (cliente[user].estado && cliente[user].codCliente == codCliente)\par
00273                     \{\par
00274                         printDataCliente(user);\par
00275                     \}\par
00276                 \}\par
00277             {\cf19 break};\par
00278         \}\par
00279     \}\par
00280     pressEnter({\cf17 true});\par
00281 \}\par
00282 {\cf21 #pragma endregion}\par
00283 \par
00284 {\cf21 #pragma region EstatisticasEncomendas}\par
00290 {\cf18 void} statisticsEncomendas()\par
00291 \{\par
00292     {\cf19 if} (NE == -1) \{\par
00293         red(); printf({\cf22 "\\n[!] N\'E3o existem encomendas! [!]"}); white();\par
00294         pressEnter({\cf17 true});\par
00295         {\cf19 return};\par
00296     \} {\cf19 else} {\cf19 if} (NE == 0) \{\par
00297         red(); printf({\cf22 "\\n[!] N\'E3o existem encomendas sufientes para gerar estatisticas! [!]"}); white();\par
00298         pressEnter({\cf17 true});\par
00299         {\cf19 return};\par
00300     \}\par
00302     {\cf18 float} averagePrice = 0, averageQuantity = 0;\par
00303     {\cf19 for} ({\cf18 int} enc = 0; enc <= NE; enc++)\par
00304     \{\par
00305         {\cf19 if} (encomenda[enc].estado)\par
00306         \{\par
00307             averagePrice += encomenda[enc].total;\par
00308             averageQuantity += (float) encomenda[enc].quantidade;\par
00309         \}\par
00310     \}\par
00311     averagePrice = averagePrice / (float) (NE + 1);\par
00312     averageQuantity = averageQuantity / (float) (NE + 1);\par
00313 \par
00314     cyan(); printf({\cf22 "\\n  [ M\'E9dia Encomendas ]"}); white();\par
00315     printf({\cf22 "\\n  | Pre\'E7o: %0.2f\'80"}, averagePrice);\par
00316     printf({\cf22 "\\n  | Quantidade: %d"}, ({\cf18 int}) averageQuantity);\par
00317     printf({\cf22 "\\n  | Total Encomendas: %d\\n"}, NE + 1);\par
00318 \par
00319     {\cf20 // Best and Worst Seller}\par
00320     {\cf18 int} codArtigoHQ, higherQuantity, codArtigoLQ, lowerQuantity, codBestBuyer, bestBuyerQuantity = 0;\par
00321     \par
00323     {\cf19 for} ({\cf18 int} enc = 0; enc <= NE; enc++)\par
00324     \{\par
00325         {\cf19 if} (encomenda[enc].estado)\par
00326         \{\par
00327             {\cf19 if} (encomenda[enc].quantidade > higherQuantity)\par
00328             \{\par
00329                 higherQuantity = encomenda[enc].quantidade;\par
00330                 codArtigoHQ = encomenda[enc].codArtigo;\par
00331             \}\par
00332         \}\par
00333     \}\par
00334 \par
00336     lowerQuantity = higherQuantity;\par
00337     {\cf19 for} ({\cf18 int} enc = 0; enc <= NE; enc++)\par
00338     \{\par
00339         {\cf19 if} (encomenda[enc].estado)\par
00340         \{\par
00341             {\cf19 if} (encomenda[enc].quantidade < lowerQuantity)\par
00342             \{\par
00343                 lowerQuantity = encomenda[enc].quantidade;\par
00344                 codArtigoLQ = encomenda[enc].codArtigo;\par
00345             \}\par
00346         \}\par
00347     \}\par
00348     \par
00349     codArtigoHQ = getArtigoIndex(codArtigoHQ); codArtigoLQ = getArtigoIndex(codArtigoLQ);\par
00350     \par
00351     cyan(); printf({\cf22 "\\n  [ Produto Mais & Menos Vendido ]"}); white();\par
00352     printf({\cf22 "\\n  | Artigo:"}); green(); printf({\cf22 " %s com %d unidades vendidas"}, \\\par
00353     getArtigoName(codArtigoHQ), higherQuantity); white();\par
00354     printf({\cf22 "\\n  | Artigo:"}); red(); printf({\cf22 " %s com %d unidades vendidas\\n"}, \\\par
00355     getArtigoName(codArtigoLQ), lowerQuantity); white();\par
00356 \par
00357 \par
00359     {\cf19 for} ({\cf18 int} enc = 0; enc <= NE; enc++)\par
00360     \{\par
00361         {\cf19 if} (encomenda[enc].estado)\par
00362         \{\par
00363             {\cf19 if} (encomenda[enc].quantidade > bestBuyerQuantity)\par
00364             \{\par
00365                 bestBuyerQuantity = encomenda[enc].quantidade;\par
00366                 codBestBuyer = encomenda[enc].codCliente;\par
00367             \}\par
00368         \}\par
00369     \}\par
00370 \par
00371     cyan(); printf({\cf22 "\\n  [ Cliente que mais comprou ]"}); white();\par
00372     printf({\cf22 "\\n  | Cliente:"}); green(); printf({\cf22 " %s com %d unidades compradas\\n"}, \\\par
00373     getClientName(codBestBuyer), bestBuyerQuantity); white();\par
00374     \par
00375 \par
00377     {\cf18 int} codArtigoMLH, codArtigoMLL;\par
00378     {\cf18 float} higherMargemLucro;\par
00379     {\cf19 for} ({\cf18 int} art = 0; art <= NA; art++)\par
00380     \{\par
00381         {\cf19 if} (artigo[art].estado)\par
00382         \{\par
00383             {\cf19 if} (artigo[art].margemLucro > higherMargemLucro)\par
00384             \{\par
00385                 higherMargemLucro = artigo[art].margemLucro;\par
00386                 codArtigoMLH = art;\par
00387             \}\par
00388         \}\par
00389     \}\par
00390 \par
00392     {\cf18 float} lowerMargemLucro = higherMargemLucro;\par
00393     {\cf19 for} ({\cf18 int} art = 0; art <= NA; art++)\par
00394     \{\par
00395         {\cf19 if} (artigo[art].estado)\par
00396         \{\par
00397             {\cf19 if} (artigo[art].margemLucro < lowerMargemLucro)\par
00398             \{\par
00399                 lowerMargemLucro = artigo[art].margemLucro;\par
00400                 codArtigoMLL = art;\par
00401             \}\par
00402         \}\par
00403     \}\par
00404 \par
00405     cyan(); printf({\cf22 "\\n  [ Melhor & Pior Margem de Lucro ]"}); white();\par
00406     printf({\cf22 "\\n  | Artigo:"}); green(); printf({\cf22 " %s com %0.2f\'80 de margem de lucro"}, \\\par
00407     getArtigoName(codArtigoMLH), higherMargemLucro); white();\par
00408     printf({\cf22 "\\n  | Artigo:"}); red(); printf({\cf22 " %s com %0.2f\'80 de margem de lucro\\n"}, \\\par
00409     getArtigoName(codArtigoMLL), lowerMargemLucro); white();\par
00410 \par
00411     \par
00413     {\cf18 int} stateEncomendas[2] = \{0, 0\};\par
00414     {\cf19 for} ({\cf18 int} enc = 0; enc <= NE; enc++)\par
00415     \{\par
00416         {\cf19 if} (encomenda[enc].estado)\par
00417         \{\par
00418             stateEncomendas[0] += 1;\par
00419         \}\par
00420         {\cf19 else}\par
00421         \{\par
00422             stateEncomendas[1] += 1;\par
00423         \}\par
00424     \}\par
00425 \par
00426     {\cf18 double} percentagemEncomendas[2] = \{0, 0\};\par
00427     percentagemEncomendas[0] = (double) stateEncomendas[0] / ({\cf18 double}) (NE + 1);\par
00428     percentagemEncomendas[1] = (double) stateEncomendas[1] / ({\cf18 double}) (NE + 1);\par
00429 \par
00430     cyan(); printf({\cf22 "\\n  [ Encomendas Ativas & Canceladas ]"}); white();\par
00431     printf({\cf22 "\\n  | Ativas: %d -"}, stateEncomendas[0]); green();\par
00432     printf({\cf22 " %0.2f%% das encomendas"}, percentagemEncomendas[0] * 100); white();\par
00433     printf({\cf22 "\\n  | Canceladas: %d -"}, stateEncomendas[1]); red();\par
00434     printf({\cf22 " %0.2f%% das encomendas"}, percentagemEncomendas[1] * 100); white();\par
00435 \par
00436     pressEnter({\cf17 true});\par
00437 \}\par
00438 {\cf21 #pragma endregion}\par
00439 \par
00440 {\cf21 #pragma region printDataEncomenda}\par
00445 {\cf18 void} printDataEncomenda({\cf18 int} enc)\par
00446 \{\par
00447     printf({\cf22 "\\n[C\'F3digo Encomenda]: %d "}, encomenda[enc].codEncomenda);\par
00448     printf({\cf22 "\\n  | C\'F3digo Cliente: %d (%s)"}, encomenda[enc].codCliente, getClientName(encomenda[enc].codCliente));\par
00449     printf({\cf22 "\\n  | %d pare(s) de %s"}, encomenda[enc].quantidade, getArtigoName(getArtigoIndex(encomenda[enc].codArtigo)));\par
00450     printf({\cf22 "\\n  | Pre\'E7o Encomenda: %0.2f\'80"}, encomenda[enc].total);\par
00451     printf({\cf22 "\\n  | Data: %d %d/%d/%d"}, encomenda[enc].horaminuto, encomenda[enc].dia, encomenda[enc].mes, encomenda[enc].ano);\par
00452     printf({\cf22 "\\n  | [Estado]: %s\\n"}, getEstadoEncomenda(encomenda[enc].estado));\par
00453 \}\par
00454 {\cf21 #pragma endregion}\par
00455 \par
00456 {\cf21 #pragma region printDataArtigo}\par
00462 {\cf18 void} printDataArtigo({\cf18 int} art, {\cf18 bool} printTamanhos)\par
00463 \{\par
00464     {\cf18 int} looperTamanhos = 0;\par
00465 \par
00466     printf({\cf22 "\\n"}\par
00467     {\cf22 "Artigo: %s (C\'F3digo: %d)\\n"}\par
00468     {\cf22 "  | M\'E3o Obra: %0.2f\'80\\n"}\par
00469     {\cf22 "  | Custos Fixos: %0.2f\'80\\n"}\par
00470     {\cf22 "  | Margem Lucro: %0.2f\'80\\n"}\par
00471     {\cf22 "  | Preco por defeito: %0.2f\'80\\n"}\par
00472     {\cf22 "  | Incremento (por tamanho): +%0.2f\'80\\n"}\par
00473     {\cf22 "  [Estado] %s"}, artigo[art].artigo, artigo[art].codArtigo, artigo[art].maoObra,  \\\par
00474     artigo[art].custosFixos, artigo[art].margemLucro, artigo[art].defaultPreco, artigo[art].incrementoPreco, getEstadoEncomenda(artigo[art].estado));\par
00475 \par
00476     {\cf19 if} (printTamanhos) \{\par
00477         printf({\cf22 "\\t| Tamanho(s) e Pre\'E7o(s):\\n"});\par
00478         {\cf19 for} ({\cf18 int} j = artigo[art].tamanhos[0]; j <= artigo[art].tamanhos[1]; j++)\par
00479         \{\par
00480             printf({\cf22 "\\t|_ Tamanho: %d | Pre\'E7o: %0.2f\'80\\n"}, \\\par
00481             ({\cf18 int}) artigo[art].tamanhoPreco[looperTamanhos][0], artigo[art].tamanhoPreco[looperTamanhos][1]);\par
00482             looperTamanhos++;\par
00483         \}\par
00484     \}\par
00485 \}\par
00486 {\cf21 #pragma endregion}\par
00487 \par
00488 {\cf21 #pragma region printDataCliente}\par
00493 {\cf18 void} printDataCliente({\cf18 int} cli)\par
00494 \{\par
00495     printf({\cf22 "\\n[C\'F3digo Cliente]: %d"}, cliente[cli].codCliente);\par
00496     printf({\cf22 "\\n  | Nome: %s"}, cliente[cli].nome);\par
00497     printf({\cf22 "\\n  | NIF: %d"}, cliente[cli].nif);\par
00498     printf({\cf22 "\\n  | Pa\'EDs: %s\\n"}, cliente[cli].pais);\par
00499 \}\par
00500 {\cf21 #pragma endregion}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
shopping.c File Reference\par \pard\plain 
{\tc\tcl2 \v shopping.c}
{\xe \v shopping.c}
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <stdbool.h>}\par
{\f2 #include <unistd.h>}\par
{\f2 #include <time.h>}\par
{\f2 #include "definitions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IVA}\~ 1.23\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b getEstadoEncomenda} (int estado)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retornar o estado de certa encomenda. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loginClient} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que autentica certo utilizador. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b logoutClient} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que desautentica certo utilizador. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b doShopping} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que adiciona uma encomenda, ou seja uma compra. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b listEncomendas} (int queryType)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite listar as encomendas. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cancelEncomenda} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite cancelar uma encomenda. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v IVA\:shopping.c}
{\xe \v shopping.c\:IVA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IVA\~ 1.23}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b shopping.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v cancelEncomenda\:shopping.c}
{\xe \v shopping.c\:cancelEncomenda}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cancelEncomenda ()}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite cancelar uma encomenda. }}\par
{
Definition at line {\b 362} of file {\b shopping.c}.}\par
}
{\xe \v doShopping\:shopping.c}
{\xe \v shopping.c\:doShopping}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void doShopping ()}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que adiciona uma encomenda, ou seja uma compra. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Verifica se j\'E1 existe um utilizador autenticado, e se existem artigos dispon\'EDveis \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Caso cliente n\'E3o esteja autenticado, e pretenda fazer compras\par
C\'E1lculo do pre\'E7o defaultPreco = (maoObra + custosFixos) * margemLucro\par
}{
Definition at line {\b 118} of file {\b shopping.c}.}\par
}
{\xe \v getEstadoEncomenda\:shopping.c}
{\xe \v shopping.c\:getEstadoEncomenda}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * getEstadoEncomenda (int  {\i estado})}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Retornar o estado de certa encomenda. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i estado} \cell }{- O estado de do artigo em int (ex: artigo[1].estado) \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Dispon\'EDvel ou Indispon\'EDvel (string) \par
}}}{
Definition at line {\b 17} of file {\b shopping.c}.}\par
}
{\xe \v listEncomendas\:shopping.c}
{\xe \v shopping.c\:listEncomendas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void listEncomendas (int  {\i queryType})}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que permite listar as encomendas. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i queryType} \cell }{- Tipo de "query" a ser executada \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
De acordo com o tipo de "query" definido na enumera\'E7\'E3o, a fun\'E7\'E3o lista as encomendas \par
Por exemplo, a "query" (61) lista todas as encomendas de todos os clientes \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Permite listar as encomendas de certo cliente, este que \'E9 indicado via Nome ou pelo seu C\'F3digo\par
Permite listar as encomendas de acordo com certa data\par
}}}{
Definition at line {\b 208} of file {\b shopping.c}.}\par
}
{\xe \v loginClient\:shopping.c}
{\xe \v shopping.c\:loginClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void loginClient ()}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que autentica certo utilizador. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Verifica se j\'E1 existe um utilizador autenticado, se sim d\'E1 a op\'E7\'E3o de sair ou de autenticar outro utilizador \par
}}}{
Definition at line {\b 36} of file {\b shopping.c}.}\par
}
{\xe \v logoutClient\:shopping.c}
{\xe \v shopping.c\:logoutClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void logoutClient ()}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o que desautentica certo utilizador. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Verifica se j\'E1 existe um utilizador autenticado \par
}}}{
Definition at line {\b 97} of file {\b shopping.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
shopping.c\par \pard\plain 
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdlib.h>}\par
00003 {\cf21 #include <string.h>}\par
00004 {\cf21 #include <stdbool.h>}\par
00005 {\cf21 #include <unistd.h>}\par
00006 {\cf21 #include <time.h>}\par
00007 \par
00008 {\cf21 #include "definitions.h"}\par
00009 {\cf21 #define IVA 1.23}\par
00010 \par
00011 {\cf21 #pragma region GetEstadoEncomenda}\par
00017 {\cf18 char} *getEstadoEncomenda({\cf18 int} estado)\par
00018 \{\par
00019     {\cf19 if} (estado == 1)\par
00020     \{\par
00021         {\cf19 return} {\cf22 "Dispon\'EDvel\\n"};\par
00022     \}\par
00023     {\cf19 else}\par
00024     \{\par
00025         {\cf19 return} {\cf22 "Indispon\'EDvel\\n"};\par
00026     \}\par
00027 \}\par
00028 {\cf21 #pragma endregion}\par
00029 \par
00030 {\cf21 #pragma region LoginClient}\par
00036 {\cf18 void} loginClient()\par
00037 \{\par
00038     {\cf19 if} (NC == -1)\par
00039     \{\par
00040         red(); printf({\cf22 "\\n[!] N\'E3o existem clientes registados [!]\\n"}); white();\par
00041         addCliente();\par
00042     \}\par
00043 \par
00044     {\cf19 if} (runtime->currentClient != 0)\par
00045     \{\par
00046         yellow(); printf({\cf22 "\\n[!] J\'E1 existe um cliente logado [!]\\n"}); white();\par
00047         printf({\cf22 "\\n[1] Pretende voltar ao menu com o cliente %s\\n"}\par
00048         {\cf22 "[2] Ou iniciar sess\'E3o com outro utilizador?\\n> "}, getClientName(runtime->currentClient));\par
00049         \par
00050         {\cf18 int} opcao;\par
00051         scanf({\cf22 "%d"}, &opcao);\par
00052         {\cf19 switch} (opcao)\par
00053         \{\par
00054         {\cf19 case} 1:\par
00055             {\cf19 return};\par
00056         \par
00057         {\cf19 case} 2:\par
00058             logoutClient();\par
00059             loginClient();\par
00060             {\cf19 break};\par
00061 \par
00062         {\cf19 default}:\par
00063             red(); printf({\cf22 "[!] Op\'E7\'E3o inv\'E1lida [!]"}); white();\par
00064             pressEnter({\cf17 true});\par
00065             loginClient();\par
00066             {\cf19 break};\par
00067         \}\par
00068     \}\par
00069 \par
00070     {\cf19 if} (runtime->currentClient == 0)\par
00071     \{\par
00072         cyan(); printf({\cf22 "\\n_______ Login _______\\n"}); white();\par
00073         printf({\cf22 "\\nC\'F3digo de Cliente: "});\par
00074         scanf({\cf22 " %d"}, &runtime->currentClient);\par
00075     \}\par
00076 \par
00077     {\cf19 if} (getEstadoCliente(runtime->currentClient))\par
00078     \{\par
00079         green(); printf({\cf22 "\\n*** Bem Vindo, %s ***\\n"}, getClientName(runtime->currentClient)); white();\par
00080         sleep(1);\par
00081         clearScreen();\par
00082     \}\par
00083     {\cf19 else}\par
00084     \{\par
00085         red(); printf({\cf22 "\\n[!] Cliente n\'E3o existe, indique um cliente v\'E1lido [!]\\n"}); white();\par
00086         runtime->currentClient = 0;\par
00087         loginClient();\par
00088     \}\par
00089 \}\par
00090 {\cf21 #pragma endregion}\par
00091 \par
00092 {\cf21 #pragma region Logout}\par
00097 {\cf18 void} logoutClient()\par
00098 \{\par
00099     {\cf19 if} (runtime->currentClient == 0)\par
00100     \{\par
00101         yellow(); printf({\cf22 "\\n[!] N\'E3o existe cliente logado [!]\\n"}); white();\par
00102         sleep(2);\par
00103         clearScreen();\par
00104     \}\par
00105     {\cf19 else}\par
00106     \{\par
00107         yellow(); printf({\cf22 "\\n[!] Logout Cliente %s [!]\\n"}, getClientName(runtime->currentClient)); white();\par
00108         runtime->currentClient = 0;\par
00109     \}\par
00110 \}\par
00111 {\cf21 #pragma endregion}\par
00112 \par
00113 {\cf21 #pragma region Shopping}\par
00118 {\cf18 void} doShopping()\par
00119 \{\par
00121     {\cf19 if} (!loggedClient())\par
00122     \{\par
00123         yellow(); printf({\cf22 "\\n[!] Por favor inicie sess\'E3o [!]\\n"}); white();\par
00124         loginClient();\par
00125     \}\par
00126 \par
00127     {\cf19 if} (NA == -1) \{\par
00128         red(); printf({\cf22 "\\n[!] N\'E3o existem artigos dispon\'EDveis [!]"}); white();\par
00129         pressEnter({\cf17 true});\par
00130         {\cf19 return};\par
00131     \}\par
00132 \par
00133     {\cf18 int} artigoComprar, quantidadeComprar, tamanhoComprar;\par
00134     {\cf18 char} codPromo[8];\par
00135     reallocStruct(3);\par
00136     encomenda[NE].codCliente = runtime->currentClient;\par
00137 \par
00138     {\cf19 do}\par
00139     \{\par
00140         listArtigos(10);\par
00141         printf({\cf22 "\\nSelecionar o artigo a comprar (C\'F3digo): "});\par
00142         scanf({\cf22 "%d"}, &artigoComprar);\par
00143     \} {\cf19 while} (!availableForOperation(3, artigoComprar, 0));\par
00144     encomenda[NE].codArtigo = artigoComprar;\par
00145 \par
00146     {\cf19 do}\par
00147     \{\par
00148         printf({\cf22 "\\nQuantidade de pares de %s pretendidos: "}, getArtigoName(getArtigoIndex(artigoComprar)));\par
00149         scanf({\cf22 "%d"}, &quantidadeComprar);\par
00150     \} {\cf19 while} (!checkNumber(quantidadeComprar));\par
00151     encomenda[NE].quantidade = quantidadeComprar;\par
00152     \par
00153     {\cf19 do}\par
00154     \{\par
00155         printf({\cf22 "\\nTamanho pretendido: "});\par
00156         scanf({\cf22 "%d"}, &tamanhoComprar);\par
00157     \} {\cf19 while} (!availableForOperation(5, artigoComprar, tamanhoComprar));\par
00158     encomenda[NE].tamanho = tamanhoComprar;\par
00159 \par
00160     printf({\cf22 "\\n  Desconto Promocional\\n[Press ENTER caso n\'E3o tenha]: "});\par
00161     scanf({\cf22 "%c"}, &codPromo);\par
00162     fgets(codPromo,5,stdin);\par
00163 \par
00166     artigoComprar = getArtigoIndex(artigoComprar);\par
00167 \par
00168     {\cf18 double} subtotal = artigo[artigoComprar].defaultPreco * (double) (quantidadeComprar);\par
00169     {\cf19 if} (checkCodPromo(codPromo))\par
00170     \{\par
00171         subtotal -= runtime->percentageDesconto;\par
00172     \}\par
00173     {\cf18 double} totalIva = (double) (subtotal * IVA);\par
00174 \par
00175     printf({\cf22 "\\n Subtotal: %.2lf\'80"}, subtotal); bold();\par
00176     printf({\cf22 "\\n Total a pagar (c/IVA): %.2lf\'80\\n"}, totalIva);  white();\par
00177     encomenda[NE].total = totalIva;\par
00178 \par
00179     encomenda[NE].codEncomenda = NE + 1;\par
00180 \par
00181     encomenda[NE].horaminuto = getDateInfo(1);\par
00182     encomenda[NE].dia = getDateInfo(2);\par
00183     encomenda[NE].mes = getDateInfo(3);\par
00184     encomenda[NE].ano = getDateInfo(4);\par
00185 \par
00186     encomenda[NE].estado = {\cf17 true};\par
00187 \par
00188     green(); printf({\cf22 "\\n[!] A encomenda foi registada com sucesso [!]\\n"}); white();\par
00189 \par
00190     printf({\cf22 "\\nDeseja adicionar mais algum artigo? (s/N): "});\par
00191     {\cf18 char} opcao;\par
00192     scanf({\cf22 " %c"}, &opcao);\par
00193     {\cf19 if} (opcao == {\cf23 's'} || opcao == {\cf23 'S'})\par
00194     \{\par
00195         doShopping();\par
00196     \}\par
00197     clearScreen();\par
00198 \}\par
00199 {\cf21 #pragma endregion}\par
00200 \par
00201 {\cf21 #pragma region ListEncomendas}\par
00208 {\cf18 void} listEncomendas({\cf18 int} queryType)\par
00209 \{\par
00210     {\cf19 if} (NE == -1) \{\par
00211         red(); printf({\cf22 "\\n[!] N\'E3o existem encomendas! [!]"}); white();\par
00212         pressEnter({\cf17 true});\par
00213         {\cf19 return};\par
00214     \}\par
00215 \par
00216     {\cf17 enum} queryType \{\par
00217         currentClient = 60,\par
00218         todas = 61,\par
00219         especifica = 62,\par
00220         dataEspecifica = 63,\par
00221     \};\par
00222 \par
00223     cyan(); printf({\cf22 "\\n------------------------ Encomenda(s) ------------------------\\n"}); white();\par
00224 \par
00225     {\cf18 int} count = 0, semanaExportar, loopDias, looper = 1, mes;\par
00226     {\cf19 switch} (queryType)\par
00227     \{\par
00228     {\cf19 case} currentClient:\par
00229         {\cf19 if} (runtime->currentClient == 0)\par
00230         \{\par
00231             red(); printf({\cf22 "\\n[!] O utilizador em quest\'E3o n\'E3o se encontra com sess\'E3o iniciada! [!]\\n"}); white();\par
00232             loginClient();\par
00233         \}\par
00234         {\cf19 for} ({\cf18 int} enc = 0; enc <= NE; enc++)\par
00235         \{\par
00236             {\cf19 if} (encomenda[enc].estado && encomenda[enc].codCliente == runtime->currentClient)\par
00237             \{\par
00238                 printDataEncomenda(enc);\par
00239                 count++;\par
00240             \}\par
00241         \}\par
00242         {\cf19 if} (count == 0)\par
00243         \{\par
00244             red(); printf({\cf22 "\\n[!] N\'E3o existem encomendas para o cliente atual [!]\\n"}); white();\par
00245             {\cf19 return};\par
00246         \}\par
00247         bold(); printf({\cf22 "\\n  [Total]: %0.2f\'80\\n"}, getTotalEncomenda()); white();\par
00248         count = 0;\par
00249         {\cf19 break};\par
00250 \par
00251     {\cf19 case} todas:\par
00252         {\cf19 for} ({\cf18 int} enc = 0; enc <= NE; enc++)\par
00253         \{\par
00254             printDataEncomenda(enc);\par
00255         \}\par
00256         {\cf19 if} (NE == -1)\par
00257         \{\par
00258             red(); printf({\cf22 "\\n[!] N\'E3o existem encomendas registadas [!]\\n"}); white();\par
00259             pressEnter({\cf17 true});\par
00260         \}\par
00261         {\cf19 break};\par
00262     \par
00263     {\cf19 case} especifica:\par
00266         printf({\cf22 "\\nPesquisar Cliente por (N)ome ou (C)\'F3digo? "});\par
00267         {\cf18 char} internalQueryType[10];\par
00268         scanf({\cf22 " %s"}, internalQueryType);\par
00269         {\cf19 if} (strcmp(internalQueryType, {\cf22 "N"}) == 0 || strcmp(internalQueryType, {\cf22 "n"}) == 0)\par
00270         \{\par
00271             printf({\cf22 "\\nNome do Cliente: "});\par
00272             {\cf18 char} nomeCliente[SC];\par
00273             scanf({\cf22 " %24s"}, nomeCliente);\par
00274             {\cf19 for} ({\cf18 int} enc = 0; enc <= NE; enc++)\par
00275             \{\par
00276                 {\cf19 if} (encomenda[enc].estado && strcmp(cliente[encomenda[enc].codCliente].nome, nomeCliente) == 0)\par
00277                 \{\par
00278                     printDataEncomenda(enc);\par
00279                     count++;\par
00280                 \}\par
00281             \}\par
00282         \}\par
00283         {\cf19 else} {\cf19 if} (strcmp(internalQueryType, {\cf22 "C"}) == 0 || strcmp(internalQueryType, {\cf22 "c"}) == 0)\par
00284         \{\par
00285             printf({\cf22 "\\nC\'F3digo do Cliente: "});\par
00286             {\cf18 int} codCliente;\par
00287             scanf({\cf22 "%d"}, &codCliente);\par
00288             {\cf19 for} ({\cf18 int} enc = 0; enc <= NE; enc++)\par
00289             \{\par
00290                 {\cf19 if} (encomenda[enc].estado && encomenda[enc].codCliente == codCliente)\par
00291                 \{\par
00292                     printDataEncomenda(enc);\par
00293                     count++;\par
00294                 \}\par
00295             \}\par
00296         \}\par
00297         {\cf19 if} (count == 0)\par
00298         \{\par
00299             red(); printf({\cf22 "\\n[!] N\'E3o existem encomendas para o cliente indicado [!]"}); white();\par
00300         \}\par
00301         {\cf19 break};\par
00302     \par
00303     {\cf19 case} dataEspecifica:\par
00306         printf({\cf22 "Indique a semana a exportar:"}\par
00307         {\cf22 "\\n\\n[1] Semana Atual"}\par
00308         {\cf22 "\\n[2] Semana Anterior\\n> "});\par
00309         scanf({\cf22 "%d"}, &semanaExportar);\par
00310 \par
00311         {\cf19 switch} (semanaExportar)\par
00312         \{\par
00313         {\cf19 case} 1:\par
00314             loopDias = getDateInfo(2) + 6;\par
00315             mes = getDateInfo(3);\par
00316             cyan(); printf({\cf22 "\\n[Encomendas da Semana]\\n"}); white();\par
00317             {\cf19 while} (looper <= loopDias)\par
00318             \{\par
00319                 {\cf19 for} ({\cf18 int} enc = 0; enc <= NE; enc++)\par
00320                 \{\par
00321                     {\cf19 if} (encomenda[enc].estado && encomenda[enc].dia == looper && encomenda[enc].mes == mes)\par
00322                     \{\par
00323                         printDataEncomenda(enc);\par
00324                         count++;\par
00325                     \}\par
00326                 \}\par
00327                 looper++;\par
00328             \}\par
00329             {\cf19 break};\par
00330 \par
00331         {\cf19 case} 2:\par
00332             loopDias = getDateInfo(2) - 6;\par
00333             cyan(); printf({\cf22 "\\n[Encomendas da Semana Anterior]\\n"}); white();\par
00334             {\cf19 while} (looper <= loopDias)\par
00335             \{\par
00336                 {\cf19 for} ({\cf18 int} enc = 0; enc <= NE; enc++)\par
00337                 \{\par
00338                     {\cf19 if} (encomenda[enc].estado && encomenda[enc].dia == looper)\par
00339                     \{\par
00340                         printDataEncomenda(enc);\par
00341                         count++;\par
00342                     \}\par
00343                 \}\par
00344                 looper++;\par
00345             \}\par
00346             {\cf19 break};\par
00347         \}\par
00348         \par
00349         {\cf19 if} (count == 0)\par
00350         \{\par
00351             red(); printf({\cf22 "\\n[!] N\'E3o existem encomendas para a semana indicada [!]"}); white();\par
00352         \}\par
00353     \}\par
00354     pressEnter({\cf17 true});\par
00355 \}\par
00356 {\cf21 #pragma endregion}\par
00357 \par
00358 {\cf21 #pragma region CancelEncomenda}\par
00362 {\cf18 void} cancelEncomenda()\par
00363 \{\par
00364     {\cf19 if} (NE == -1) \{\par
00365         red(); printf({\cf22 "\\n[!] N\'E3o existem encomendas! [!]"}); white();\par
00366         pressEnter({\cf17 true});\par
00367         {\cf19 return};\par
00368     \}\par
00369     {\cf19 else} {\cf19 if} (!loggedClient())\par
00370     \{\par
00371         yellow(); printf({\cf22 "\\n[!] Por favor inicie sess\'E3o [!]\\n"}); white();\par
00372         loginClient();\par
00373     \}\par
00374     \par
00375     {\cf19 for} ({\cf18 int} enc = 0; enc <= NE; enc++)\par
00376     \{\par
00377         {\cf19 if} (encomenda[enc].estado && encomenda[enc].codCliente == runtime->currentClient)\par
00378         \{\par
00379             printDataEncomenda(enc);\par
00380         \}\par
00381     \}\par
00382 \par
00383     {\cf18 int} encomendaToCancel;\par
00384     printf({\cf22 "\\nIndique o n\'FAmero da encomenda a cancelar: "});\par
00385     scanf({\cf22 "%d"}, &encomendaToCancel);\par
00386     encomendaToCancel--;\par
00387 \par
00388     {\cf19 if} (encomenda[encomendaToCancel].estado && encomenda[encomendaToCancel].codCliente == runtime->currentClient)\par
00389     \{\par
00390         encomenda[encomendaToCancel].estado = {\cf17 false};\par
00391         red(); printf({\cf22 "\\n[!] Encomenda cancelada com sucesso! [!]"}); white();\par
00392     \}\par
00393     {\cf19 else}\par
00394     \{\par
00395         red(); printf({\cf22 "\\n[!] Encomenda n\'E3o encontrada! [!]"}); white();\par
00396     \}\par
00397     pressEnter({\cf17 true});\par
00398 \}\par
00399 {\cf21 #pragma endregion}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
util.c File Reference\par \pard\plain 
{\tc\tcl2 \v util.c}
{\xe \v util.c}
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <stdbool.h>}\par
{\f2 #include <unistd.h>}\par
{\f2 #include <time.h>}\par
{\f2 #include "definitions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numberOfDigits} (int num)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Conta o n\'FAmero de digitos de um inteiro. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearScreen} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permite limpar o ecr\'E3 de forma "port\'E1til" entre sistemas. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pressEnter} (bool alsoClearScreen)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permite dar a op\'E7\'E3o do tipico "Press Enter to continue". }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b checkString} (const char *string)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se a string indicada \'E9 v\'E1lida tendo em contas certas condi\'E7\'F5es. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b checkNumber} (double number)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Controlar o inteiro indicado pelo utilizador. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b checkCodPromo} (char *codPromo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se o c\'F3digo promocional introduzido pelo utilizador \'E9 valido. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b availableForOperation} (int op, int codArtigo, int parameter)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se o artigo OU par\'E2metro indicado est\'E1 dispon\'EDvel ou \'E9 valido para X opera\'E7\'E3o. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b loggedClient} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se existe utilizador autenticado. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reallocStruct} (int st)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b freeMemory} (bool alsoStopTheProgram)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Liberta a mem\'F3ria antes de fechar o programa e/ou termina o programa. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v availableForOperation\:util.c}
{\xe \v util.c\:availableForOperation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool availableForOperation (int  {\i op}, int  {\i codArtigo}, int  {\i parameter})}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se o artigo OU par\'E2metro indicado est\'E1 dispon\'EDvel ou \'E9 valido para X opera\'E7\'E3o. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
*\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
As opera\'E7\'F5es est\'E3o indicadas na enumera\'E7\'E3o \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true se a opera\'E7\'E3o/par\'E2metro \'E9 v\'E1lido, false caso contr\'E1rio \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O valor do return \'E9 usado no respetivo "loop do while" \par
}}}{
Definition at line {\b 118} of file {\b util.c}.}\par
}
{\xe \v checkCodPromo\:util.c}
{\xe \v util.c\:checkCodPromo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool checkCodPromo (char *  {\i codPromo})}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se o c\'F3digo promocional introduzido pelo utilizador \'E9 valido. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
*\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true se o c\'F3digo for v\'E1lido, false caso contr\'E1rio \par
}}}{
Definition at line {\b 96} of file {\b util.c}.}\par
}
{\xe \v checkNumber\:util.c}
{\xe \v util.c\:checkNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool checkNumber (double  {\i number})}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Controlar o inteiro indicado pelo utilizador. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
*\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true se o inteiro for v\'E1lido, false caso contr\'E1rio \par
}}}{
Definition at line {\b 78} of file {\b util.c}.}\par
}
{\xe \v checkString\:util.c}
{\xe \v util.c\:checkString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool checkString (const char *  {\i string})}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se a string indicada \'E9 v\'E1lida tendo em contas certas condi\'E7\'F5es. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A string \'E9 v\'E1lida se:{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
n\'E3o estiver vazia e conter pelo menos 3 caracteres\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
n\'E3o cont\'E9m caracteres n\'FAmericos \par}
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true se a string for v\'E1lida, false caso contr\'E1rio \par
}}}{
Definition at line {\b 57} of file {\b util.c}.}\par
}
{\xe \v clearScreen\:util.c}
{\xe \v util.c\:clearScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void clearScreen ()}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permite limpar o ecr\'E3 de forma "port\'E1til" entre sistemas. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\par}
}{
Definition at line {\b 29} of file {\b util.c}.}\par
}
{\xe \v freeMemory\:util.c}
{\xe \v util.c\:freeMemory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void freeMemory (bool  {\i alsoStopTheProgram})}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Liberta a mem\'F3ria antes de fechar o programa e/ou termina o programa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
*{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i alsoStopTheProgram} \cell }{- Op\'E7\'E3o de sa\'EDda do programa \cell }
{\row }
}
}{
Definition at line {\b 267} of file {\b util.c}.}\par
}
{\xe \v loggedClient\:util.c}
{\xe \v util.c\:loggedClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool loggedClient ()}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verifica se existe utilizador autenticado. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
*\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true se existe utilizador autenticado, false caso contr\'E1rio \par
}}}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
N\'E3o existe cliente logado\par
}{
Definition at line {\b 217} of file {\b util.c}.}\par
}
{\xe \v numberOfDigits\:util.c}
{\xe \v util.c\:numberOfDigits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int numberOfDigits (int  {\i num})}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Conta o n\'FAmero de digitos de um inteiro. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ficheiro {\b util.c}.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Usado, por exemplo, para verificar o NIF do cliente \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
O n\'FAmero de digitos do inteiro para usar no respetivo "loop do while" \par
}}}{
Definition at line {\b 15} of file {\b util.c}.}\par
}
{\xe \v pressEnter\:util.c}
{\xe \v util.c\:pressEnter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pressEnter (bool  {\i alsoClearScreen})}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Permite dar a op\'E7\'E3o do tipico "Press Enter to continue". }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\par}
}{
Definition at line {\b 37} of file {\b util.c}.}\par
}
{\xe \v reallocStruct\:util.c}
{\xe \v util.c\:reallocStruct}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void reallocStruct (int  {\i st})}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 229} of file {\b util.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
util.c\par \pard\plain 
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdio.h>}\par
00002 {\cf21 #include <stdlib.h>}\par
00003 {\cf21 #include <string.h>}\par
00004 {\cf21 #include <stdbool.h>}\par
00005 {\cf21 #include <unistd.h>}\par
00006 {\cf21 #include <time.h>}\par
00007 \par
00008 {\cf21 #include "definitions.h"}\par
00009 \par
00010 {\cf21 #pragma region numberOfDigits}\par
00015 {\cf18 int} numberOfDigits({\cf18 int} num)\par
00016 \{\par
00017     {\cf18 int} digits = 0;\par
00018     {\cf19 do}\par
00019     \{\par
00020         digits++;\par
00021         num /= 10;\par
00022     \} {\cf19 while}(num != 0);\par
00023     {\cf19 return} digits;\par
00024 \}\par
00025 {\cf21 #pragma endregion}\par
00026 \par
00027 {\cf21 #pragma region ClearScreen}\par
00029 {\cf18 void} clearScreen()\par
00030 \{\par
00031     printf({\cf22 "\\033c"});\par
00032 \}\par
00033 {\cf21 #pragma endregion}\par
00034 \par
00035 {\cf21 #pragma region PressEnter}\par
00037 {\cf18 void} pressEnter({\cf18 bool} alsoClearScreen)\par
00038 \{\par
00039     {\cf18 char} stopper[5];\par
00040     printf({\cf22 "\\n\\nPressione [ENTER] para voltar..."});\par
00041     scanf({\cf22 "%c"}, stopper);\par
00042     fgets(stopper,5,stdin);\par
00043     {\cf19 if} (alsoClearScreen)\par
00044     \{\par
00045         clearScreen();\par
00046     \}\par
00047 \}\par
00048 {\cf21 #pragma endregion}\par
00049 \par
00050 {\cf21 #pragma region CheckString}\par
00057 {\cf18 bool} checkString({\cf17 const} {\cf18 char}* {\cf18 string})\par
00058 \{\par
00059     {\cf19 if} ( ({\cf18 string}[0] >= {\cf23 'A'} && {\cf18 string}[0] <= {\cf23 'Z'}) && \\\par
00060         ({\cf18 string}[2] >= {\cf23 'a'} && {\cf18 string}[2] <= {\cf23 'z'}) ) \par
00061     \{\par
00062         {\cf19 return} {\cf17 true};\par
00063     \}\par
00064     {\cf19 else} \par
00065     \{\par
00066         red(); printf({\cf22 "  \\n[!] A palavra indicada devera seguir as seguintes regras [!]\\n"}\par
00067                       {\cf22 "- Comecar por uma letra mai\'FAscula\\n"}\par
00068                       {\cf22 "- Ter pelo menos 3 caracteres\\n"}); white();\par
00069         {\cf19 return} {\cf17 false};\par
00070     \}\par
00071 \}\par
00072 {\cf21 #pragma endregion}\par
00073 \par
00074 {\cf21 #pragma region CheckNumber}\par
00078 {\cf18 bool} checkNumber({\cf18 double} number)\par
00079 \{\par
00080     {\cf19 if} (number <= 0)\par
00081     \{\par
00082         red(); printf({\cf22 "  \\n[!] O valor introduzido dever\'E1 ser maior que 0 [!]\\n"}); white();\par
00083         {\cf19 return} {\cf17 false};\par
00084     \}\par
00085     {\cf19 else}\par
00086     \{\par
00087         {\cf19 return} {\cf17 true};\par
00088     \}\par
00089 \}\par
00090 {\cf21 #pragma endregion}\par
00091 \par
00092 {\cf21 #pragma region CheckCodigoPromocional}\par
00096 {\cf18 bool} checkCodPromo({\cf18 char}* codPromo)\par
00097 \{\par
00098     {\cf19 if} (strcmp(codPromo, runtime->stringDesconto) == 0)\par
00099     \{\par
00100         green(); printf({\cf22 "\\n[!] Aplicado Desconto de %d%% [!]\\n"}, \\\par
00101         ({\cf18 int}) (runtime->percentageDesconto * 100)); white(); \par
00102         {\cf19 return} {\cf17 true};\par
00103     \}\par
00104     {\cf19 else}\par
00105     \{\par
00106         yellow(); printf({\cf22 "\\n[!] Desconto N\'E3o Aplicado [!]\\n"}); white(); \par
00107         {\cf19 return} {\cf17 false};\par
00108     \}\par
00109 \}\par
00110 {\cf21 #pragma endregion}\par
00111 \par
00112 {\cf21 #pragma region availableForOperation}\par
00118 {\cf18 bool} availableForOperation({\cf18 int} op, {\cf18 int} codArtigo, {\cf18 int} parameter)\par
00119 \{\par
00120     {\cf17 enum} Operation \{\par
00121         {\cf17 delete} = 1,\par
00122         update = 2,\par
00123         buy = 3,\par
00124         add = 4,\par
00125         checkSize = 5\par
00126     \};\par
00127 \par
00128     {\cf19 switch} (op)\par
00129     \{\par
00130     {\cf19 case} {\cf17 delete}: {\cf20 // delete}\par
00131         {\cf19 for} ({\cf18 int} e = 0; e <= NE; e++)\par
00132         \{\par
00133             {\cf19 if} (encomenda[e].codArtigo == codArtigo)\par
00134             \{\par
00135                 red(); printf({\cf22 "  \\n[!] O Artigo N\'C3O pode ser removido [!]\\n"});\par
00136                 printf({\cf22 "  [!] Existem encomendas com esse artigo [!]\\n"}); white();\par
00137                 sleep(1);\par
00138                 {\cf19 return} {\cf17 false};\par
00139             \}\par
00140         \}\par
00141         {\cf19 return} {\cf17 true};\par
00142 \par
00143     {\cf19 case} update: {\cf20 // update}\par
00144         {\cf19 for} ({\cf18 int} art = 0; art <= NA; art++)\par
00145         \{\par
00146             {\cf19 if} (artigo[art].codArtigo == codArtigo)\par
00147             \{\par
00148                 {\cf19 return} {\cf17 true};\par
00149             \}\par
00150         \}\par
00151         red(); printf({\cf22 "\\n[!] Artigo N\'E3o existe [!]\\n"}); white();\par
00152         {\cf19 return} {\cf17 false};\par
00153 \par
00154     {\cf19 case} buy: {\cf20 //comprar}\par
00155         {\cf19 for} ({\cf18 int} art = 0; art < NA+1; art++)\par
00156         \{\par
00157             {\cf19 if} (artigo[art].codArtigo == codArtigo)\par
00158             \{\par
00159                 {\cf19 return} {\cf17 true};\par
00160             \}\par
00161         \}\par
00162         {\cf19 if} (!artigo[codArtigo].estado)\par
00163         \{\par
00164             red(); printf({\cf22 "  \\n[!] Artigo N\'E3o Disponivel [!]\\n"}); white();\par
00165             sleep(1);\par
00166             {\cf19 return} {\cf17 false};\par
00167         \}\par
00168         red(); printf({\cf22 "  \\n[!] Artigo N\'E3o existe [!]\\n"}); white();\par
00169         sleep(1);\par
00170         {\cf19 return} {\cf17 true};\par
00171 \par
00172     {\cf19 case} add: {\cf20 // add}\par
00173         {\cf19 if} (!checkNumber(({\cf18 float}) codArtigo)) \{\par
00174             {\cf19 return} {\cf17 false};\par
00175         \}\par
00176         {\cf19 for} ({\cf18 int} art = 0; art < NA; art++)\par
00177         \{\par
00178             {\cf19 if} (artigo[art].codArtigo == codArtigo)\par
00179             \{\par
00180                 red(); printf({\cf22 "\\n[!] Artigo j\'E1 existe [!]\\n"}); white();\par
00181                 sleep(1);\par
00182                 {\cf19 return} {\cf17 false};\par
00183             \}\par
00184         \}\par
00185         {\cf19 return} {\cf17 true};\par
00186 \par
00187     {\cf19 case} checkSize:\par
00188         codArtigo = getArtigoIndex(codArtigo);\par
00189         {\cf19 for} ({\cf18 int} tam = artigo[codArtigo].tamanhos[0]; tam <= artigo[codArtigo].tamanhos[1]; tam++)\par
00190         \{\par
00191             {\cf19 if} (tam == parameter)\par
00192             \{\par
00193                 {\cf19 return} {\cf17 true};\par
00194             \}\par
00195         \}\par
00196 \par
00197         {\cf19 for} ({\cf18 int} tam = artigo[codArtigo].tamanhos[0]; tam <= artigo[codArtigo].tamanhos[1]; tam++)\par
00198         \{\par
00199             {\cf19 if} (tam == parameter)\par
00200             \{\par
00201                 {\cf19 return} {\cf17 true};\par
00202             \}\par
00203         \}\par
00204         red(); printf({\cf22 "  \\n[!] Tamanho n\'E3o existe [!]\\n"}); white();\par
00205         sleep(1);\par
00206 \par
00207     {\cf19 default}:\par
00208         {\cf19 return} {\cf17 false};\par
00209     \}\par
00210 \}\par
00211 {\cf21 #pragma endregion}\par
00212 \par
00213 {\cf21 #pragma region loggedClient}\par
00217 {\cf18 bool} loggedClient()\par
00218 \{\par
00220     {\cf19 if} (runtime->currentClient != {\cf23 '\\0'})\par
00221     \{\par
00222         {\cf19 return} {\cf17 true};\par
00223     \}\par
00224     {\cf19 return} {\cf17 false};\par
00225 \}\par
00226 {\cf21 #pragma endregion}\par
00227 \par
00228 {\cf21 #pragma region ReallocStruct}\par
00229 {\cf18 void} reallocStruct({\cf18 int} st)\par
00230 \{\par
00231     {\cf19 switch} (st)\par
00232     \{\par
00233     {\cf19 case} 1:\par
00234         artigo = realloc(artigo, {\cf17 sizeof}(Artigos) * (++NA + 1));\par
00235         {\cf19 if} (artigo == NULL)\par
00236         \{\par
00237             red(); printf({\cf22 "  \\n[!] Erro ao alocar mem\'F3ria [!]\\n"}); white();\par
00238             exit(1);\par
00239         \}\par
00240         {\cf19 break};\par
00241 \par
00242     {\cf19 case} 2:\par
00243         cliente = realloc(cliente, {\cf17 sizeof}(Clientes) * (++NC + 1));\par
00244         {\cf19 if} (cliente == NULL)\par
00245         \{\par
00246             red(); printf({\cf22 "  \\n[!] Erro ao alocar mem\'F3ria [!]\\n"}); white();\par
00247             exit(1);\par
00248         \}\par
00249         {\cf19 break};\par
00250 \par
00251     {\cf19 case} 3:\par
00252         encomenda = realloc(encomenda, {\cf17 sizeof}(Encomendas) * (++NE + 1));\par
00253         {\cf19 if} (encomenda == NULL)\par
00254         \{\par
00255             red(); printf({\cf22 "  \\n[!] Erro ao alocar mem\'F3ria [!]\\n"}); white();\par
00256             exit(1);\par
00257         \}\par
00258         {\cf19 break};\par
00259     \}\par
00260 \}\par
00261 {\cf21 #pragma endregion}\par
00262 \par
00263 {\cf21 #pragma region FreeMemory}\par
00267 {\cf18 void} freeMemory({\cf18 bool} alsoStopTheProgram) \{  \par
00268 \par
00269     free(artigo);\par
00270     free(cliente);\par
00271     free(encomenda);\par
00272     {\cf19 if} (alsoStopTheProgram)\par
00273     \{\par
00274         exit(0);\par
00275     \}\par
00276 \}\par
00277 {\cf21 #pragma endregion}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
