<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="util_8c" kind="file" language="C++">
    <compoundname>util.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">time.h</includes>
    <includes refid="definitions_8h" local="yes">definitions.h</includes>
    <incdepgraph>
      <node id="8">
        <label>definitions.h</label>
        <link refid="definitions_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>util.c</label>
        <link refid="util_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="4">
        <label>string.h</label>
      </node>
      <node id="7">
        <label>time.h</label>
      </node>
      <node id="6">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="util_8c_1a2da5c6326d98abeaf456372ceb077847" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int numberOfDigits</definition>
        <argsstring>(int num)</argsstring>
        <name>numberOfDigits</name>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>Conta o número de digitos de um inteiro. </para>
        </briefdescription>
        <detaileddescription>
<para>Ficheiro <ref refid="util_8c" kindref="compound">util.c</ref>.</para>
<para><simplesect kind="note"><para>Usado, por exemplo, para verificar o NIF do cliente </para>
</simplesect>
<simplesect kind="return"><para>O número de digitos do inteiro para usar no respetivo &quot;loop do while&quot; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.c" line="15" column="5" bodyfile="util.c" bodystart="15" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="util_8c_1a9d7e8af417b6d543da691e9c0e2f6f9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void clearScreen</definition>
        <argsstring>()</argsstring>
        <name>clearScreen</name>
        <briefdescription>
<para>Permite limpar o ecrã de forma &quot;portátil&quot; entre sistemas. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem></listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.c" line="29" column="6" bodyfile="util.c" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="util_8c_1a370ac4305d613dc116739f8b5a05e6fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pressEnter</definition>
        <argsstring>(bool alsoClearScreen)</argsstring>
        <name>pressEnter</name>
        <param>
          <type>bool</type>
          <declname>alsoClearScreen</declname>
        </param>
        <briefdescription>
<para>Permite dar a opção do tipico &quot;Press Enter to continue&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem></listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.c" line="37" column="6" bodyfile="util.c" bodystart="37" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="util_8c_1af22d234c9f1f40dea9b79ca8fb8c7288" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool checkString</definition>
        <argsstring>(const char *string)</argsstring>
        <name>checkString</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
<para>Verifica se a string indicada é válida tendo em contas certas condições. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>A string é válida se:<itemizedlist>
<listitem><para>não estiver vazia e conter pelo menos 3 caracteres</para>
</listitem><listitem><para>não contém caracteres númericos </para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="return"><para>true se a string for válida, false caso contrário </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.c" line="57" column="6" bodyfile="util.c" bodystart="57" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="util_8c_1a41532c4603b615920ea1c1216d1445ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool checkNumber</definition>
        <argsstring>(double number)</argsstring>
        <name>checkNumber</name>
        <param>
          <type>double</type>
          <declname>number</declname>
        </param>
        <briefdescription>
<para>Controlar o inteiro indicado pelo utilizador. </para>
        </briefdescription>
        <detaileddescription>
<para>*<simplesect kind="return"><para>true se o inteiro for válido, false caso contrário </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.c" line="78" column="6" bodyfile="util.c" bodystart="78" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="util_8c_1ae81c93a074d4c3bdce4d8409997418f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool checkCodPromo</definition>
        <argsstring>(char *codPromo)</argsstring>
        <name>checkCodPromo</name>
        <param>
          <type>char *</type>
          <declname>codPromo</declname>
        </param>
        <briefdescription>
<para>Verifica se o código promocional introduzido pelo utilizador é valido. </para>
        </briefdescription>
        <detaileddescription>
<para>*<simplesect kind="return"><para>true se o código for válido, false caso contrário </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.c" line="96" column="6" bodyfile="util.c" bodystart="96" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="util_8c_1a52199f9c4b3c9c302cc8d4ab4a38bae5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool availableForOperation</definition>
        <argsstring>(int op, int codArtigo, int parameter)</argsstring>
        <name>availableForOperation</name>
        <param>
          <type>int</type>
          <declname>op</declname>
        </param>
        <param>
          <type>int</type>
          <declname>codArtigo</declname>
        </param>
        <param>
          <type>int</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Verifica se o artigo OU parâmetro indicado está disponível ou é valido para X operação. </para>
        </briefdescription>
        <detaileddescription>
<para>*<simplesect kind="note"><para>As operações estão indicadas na enumeração </para>
</simplesect>
<simplesect kind="return"><para>true se a operação/parâmetro é válido, false caso contrário </para>
</simplesect>
<simplesect kind="note"><para>O valor do return é usado no respetivo &quot;loop do while&quot; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.c" line="118" column="6" bodyfile="util.c" bodystart="118" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="util_8c_1a9efdb5ab1d7b26e54799af4e7cb59fa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool loggedClient</definition>
        <argsstring>()</argsstring>
        <name>loggedClient</name>
        <briefdescription>
<para>Verifica se existe utilizador autenticado. </para>
        </briefdescription>
        <detaileddescription>
<para>*<simplesect kind="return"><para>true se existe utilizador autenticado, false caso contrário </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Não existe cliente logado</para>
        </inbodydescription>
        <location file="util.c" line="217" column="6" bodyfile="util.c" bodystart="217" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="util_8c_1a941fa13e3d505e5a9a3f9c082bfeff89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reallocStruct</definition>
        <argsstring>(int st)</argsstring>
        <name>reallocStruct</name>
        <param>
          <type>int</type>
          <declname>st</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.c" line="229" column="6" bodyfile="util.c" bodystart="229" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="util_8c_1a5ec3ba219271cd3cd14bf58108226c7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freeMemory</definition>
        <argsstring>(bool alsoStopTheProgram)</argsstring>
        <name>freeMemory</name>
        <param>
          <type>bool</type>
          <declname>alsoStopTheProgram</declname>
        </param>
        <briefdescription>
<para>Liberta a memória antes de fechar o programa e/ou termina o programa. </para>
        </briefdescription>
        <detaileddescription>
<para>*<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>alsoStopTheProgram</parametername>
</parameternamelist>
<parameterdescription>
<para>- Opção de saída do programa </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="util.c" line="267" column="6" bodyfile="util.c" bodystart="267" bodyend="276"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="definitions_8h" kindref="compound">definitions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>numberOfDigits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="definitions_8h_1a2da5c6326d98abeaf456372ceb077847" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8c_1a2da5c6326d98abeaf456372ceb077847" kindref="member">numberOfDigits</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>digits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digits++;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>/=<sp/>10;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(num<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>digits;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>ClearScreen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="definitions_8h_1a9d7e8af417b6d543da691e9c0e2f6f9f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8c_1a9d7e8af417b6d543da691e9c0e2f6f9f" kindref="member">clearScreen</ref>()</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\033c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>PressEnter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="definitions_8h_1a370ac4305d613dc116739f8b5a05e6fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8c_1a370ac4305d613dc116739f8b5a05e6fe" kindref="member">pressEnter</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alsoClearScreen)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stopper[5];</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n\nPressione<sp/>[ENTER]<sp/>para<sp/>voltar...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>scanf(</highlight><highlight class="stringliteral">&quot;%c&quot;</highlight><highlight class="normal">,<sp/>stopper);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>fgets(stopper,5,stdin);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alsoClearScreen)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8c_1a9d7e8af417b6d543da691e9c0e2f6f9f" kindref="member">clearScreen</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>CheckString</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="definitions_8h_1af22d234c9f1f40dea9b79ca8fb8c7288" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8c_1af22d234c9f1f40dea9b79ca8fb8c7288" kindref="member">checkString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">[0]<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">[0]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">[2]<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">[2]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">)<sp/>)<sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="colors_8c_1a39abd40f68d03c40857be1e74407efb9" kindref="member">red</ref>();<sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>\n[!]<sp/>A<sp/>palavra<sp/>indicada<sp/>devera<sp/>seguir<sp/>as<sp/>seguintes<sp/>regras<sp/>[!]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-<sp/>Comecar<sp/>por<sp/>uma<sp/>letra<sp/>maiúscula\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-<sp/>Ter<sp/>pelo<sp/>menos<sp/>3<sp/>caracteres\n&quot;</highlight><highlight class="normal">);<sp/><ref refid="colors_8c_1ac0fd834412eb7d5311f137d919db6788" kindref="member">white</ref>();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>CheckNumber</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="definitions_8h_1a41532c4603b615920ea1c1216d1445ad" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8c_1a41532c4603b615920ea1c1216d1445ad" kindref="member">checkNumber</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>number)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(number<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="colors_8c_1a39abd40f68d03c40857be1e74407efb9" kindref="member">red</ref>();<sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>\n[!]<sp/>O<sp/>valor<sp/>introduzido<sp/>deverá<sp/>ser<sp/>maior<sp/>que<sp/>0<sp/>[!]\n&quot;</highlight><highlight class="normal">);<sp/><ref refid="colors_8c_1ac0fd834412eb7d5311f137d919db6788" kindref="member">white</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>CheckCodigoPromocional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="definitions_8h_1ae81c93a074d4c3bdce4d8409997418f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8c_1ae81c93a074d4c3bdce4d8409997418f0" kindref="member">checkCodPromo</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>codPromo)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(codPromo,<sp/><ref refid="definitions_8h_1a69460b78379a912c83e65ba131e368e9" kindref="member">runtime</ref>-&gt;<ref refid="struct_runtime_1ae004fa1151ab1583e3a9174cf07ac012" kindref="member">stringDesconto</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="colors_8c_1a0df115437fbb77c0311e65300c65289e" kindref="member">green</ref>();<sp/>printf(</highlight><highlight class="stringliteral">&quot;\n[!]<sp/>Aplicado<sp/>Desconto<sp/>de<sp/>%d%%<sp/>[!]\n&quot;</highlight><highlight class="normal">,<sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(<ref refid="definitions_8h_1a69460b78379a912c83e65ba131e368e9" kindref="member">runtime</ref>-&gt;<ref refid="struct_runtime_1abcccdaf615845e2019116c5ce4b90b3a" kindref="member">percentageDesconto</ref><sp/>*<sp/>100));<sp/><ref refid="colors_8c_1ac0fd834412eb7d5311f137d919db6788" kindref="member">white</ref>();<sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="colors_8c_1ab0c10e6284be130a7973fa029a690ef7" kindref="member">yellow</ref>();<sp/>printf(</highlight><highlight class="stringliteral">&quot;\n[!]<sp/>Desconto<sp/>Não<sp/>Aplicado<sp/>[!]\n&quot;</highlight><highlight class="normal">);<sp/><ref refid="colors_8c_1ac0fd834412eb7d5311f137d919db6788" kindref="member">white</ref>();<sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>availableForOperation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="definitions_8h_1a52199f9c4b3c9c302cc8d4ab4a38bae5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8c_1a52199f9c4b3c9c302cc8d4ab4a38bae5" kindref="member">availableForOperation</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>op,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>codArtigo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parameter)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>Operation<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>update<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buy<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add<sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checkSize<sp/>=<sp/>5</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(op)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//<sp/>delete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e<sp/>=<sp/>0;<sp/>e<sp/>&lt;=<sp/><ref refid="definitions_8h_1ac83a8e317aabc0369638a0e4c4d3406b" kindref="member">NE</ref>;<sp/>e++)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="definitions_8h_1a3c137582b2f5c552bde184eb2d023fbc" kindref="member">encomenda</ref>[e].codArtigo<sp/>==<sp/>codArtigo)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="colors_8c_1a39abd40f68d03c40857be1e74407efb9" kindref="member">red</ref>();<sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>\n[!]<sp/>O<sp/>Artigo<sp/>NÃO<sp/>pode<sp/>ser<sp/>removido<sp/>[!]\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>[!]<sp/>Existem<sp/>encomendas<sp/>com<sp/>esse<sp/>artigo<sp/>[!]\n&quot;</highlight><highlight class="normal">);<sp/><ref refid="colors_8c_1ac0fd834412eb7d5311f137d919db6788" kindref="member">white</ref>();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sleep(1);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>update:<sp/></highlight><highlight class="comment">//<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>art<sp/>=<sp/>0;<sp/>art<sp/>&lt;=<sp/><ref refid="definitions_8h_1a6a2cf8faa74cf961cf0f42b4601b364c" kindref="member">NA</ref>;<sp/>art++)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="definitions_8h_1a90f21d9eb37bd18237e25667fe1985bd" kindref="member">artigo</ref>[art].codArtigo<sp/>==<sp/>codArtigo)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="colors_8c_1a39abd40f68d03c40857be1e74407efb9" kindref="member">red</ref>();<sp/>printf(</highlight><highlight class="stringliteral">&quot;\n[!]<sp/>Artigo<sp/>Não<sp/>existe<sp/>[!]\n&quot;</highlight><highlight class="normal">);<sp/><ref refid="colors_8c_1ac0fd834412eb7d5311f137d919db6788" kindref="member">white</ref>();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>buy:<sp/></highlight><highlight class="comment">//comprar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>art<sp/>=<sp/>0;<sp/>art<sp/>&lt;<sp/><ref refid="definitions_8h_1a6a2cf8faa74cf961cf0f42b4601b364c" kindref="member">NA</ref>+1;<sp/>art++)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="definitions_8h_1a90f21d9eb37bd18237e25667fe1985bd" kindref="member">artigo</ref>[art].codArtigo<sp/>==<sp/>codArtigo)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="definitions_8h_1a90f21d9eb37bd18237e25667fe1985bd" kindref="member">artigo</ref>[codArtigo].estado)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="colors_8c_1a39abd40f68d03c40857be1e74407efb9" kindref="member">red</ref>();<sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>\n[!]<sp/>Artigo<sp/>Não<sp/>Disponivel<sp/>[!]\n&quot;</highlight><highlight class="normal">);<sp/><ref refid="colors_8c_1ac0fd834412eb7d5311f137d919db6788" kindref="member">white</ref>();</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sleep(1);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="colors_8c_1a39abd40f68d03c40857be1e74407efb9" kindref="member">red</ref>();<sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>\n[!]<sp/>Artigo<sp/>Não<sp/>existe<sp/>[!]\n&quot;</highlight><highlight class="normal">);<sp/><ref refid="colors_8c_1ac0fd834412eb7d5311f137d919db6788" kindref="member">white</ref>();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sleep(1);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>add:<sp/></highlight><highlight class="comment">//<sp/>add</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="util_8c_1a41532c4603b615920ea1c1216d1445ad" kindref="member">checkNumber</ref>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>codArtigo))<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>art<sp/>=<sp/>0;<sp/>art<sp/>&lt;<sp/><ref refid="definitions_8h_1a6a2cf8faa74cf961cf0f42b4601b364c" kindref="member">NA</ref>;<sp/>art++)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="definitions_8h_1a90f21d9eb37bd18237e25667fe1985bd" kindref="member">artigo</ref>[art].codArtigo<sp/>==<sp/>codArtigo)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="colors_8c_1a39abd40f68d03c40857be1e74407efb9" kindref="member">red</ref>();<sp/>printf(</highlight><highlight class="stringliteral">&quot;\n[!]<sp/>Artigo<sp/>já<sp/>existe<sp/>[!]\n&quot;</highlight><highlight class="normal">);<sp/><ref refid="colors_8c_1ac0fd834412eb7d5311f137d919db6788" kindref="member">white</ref>();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sleep(1);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>checkSize:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>codArtigo<sp/>=<sp/><ref refid="definitions_8h_1a46d4eccec6d2c6e65ef4784ab4db0c78" kindref="member">getArtigoIndex</ref>(codArtigo);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tam<sp/>=<sp/><ref refid="definitions_8h_1a90f21d9eb37bd18237e25667fe1985bd" kindref="member">artigo</ref>[codArtigo].tamanhos[0];<sp/>tam<sp/>&lt;=<sp/><ref refid="definitions_8h_1a90f21d9eb37bd18237e25667fe1985bd" kindref="member">artigo</ref>[codArtigo].<ref refid="struct_artigos_1a663835fb75190f816a4c9a34da466774" kindref="member">tamanhos</ref>[1];<sp/>tam++)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tam<sp/>==<sp/>parameter)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tam<sp/>=<sp/><ref refid="definitions_8h_1a90f21d9eb37bd18237e25667fe1985bd" kindref="member">artigo</ref>[codArtigo].tamanhos[0];<sp/>tam<sp/>&lt;=<sp/><ref refid="definitions_8h_1a90f21d9eb37bd18237e25667fe1985bd" kindref="member">artigo</ref>[codArtigo].<ref refid="struct_artigos_1a663835fb75190f816a4c9a34da466774" kindref="member">tamanhos</ref>[1];<sp/>tam++)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tam<sp/>==<sp/>parameter)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="colors_8c_1a39abd40f68d03c40857be1e74407efb9" kindref="member">red</ref>();<sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>\n[!]<sp/>Tamanho<sp/>não<sp/>existe<sp/>[!]\n&quot;</highlight><highlight class="normal">);<sp/><ref refid="colors_8c_1ac0fd834412eb7d5311f137d919db6788" kindref="member">white</ref>();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sleep(1);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>loggedClient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="definitions_8h_1a9efdb5ab1d7b26e54799af4e7cb59fa2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="util_8c_1a9efdb5ab1d7b26e54799af4e7cb59fa2" kindref="member">loggedClient</ref>()</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="definitions_8h_1a69460b78379a912c83e65ba131e368e9" kindref="member">runtime</ref>-&gt;<ref refid="struct_runtime_1a709195f9f9c987b9b2a5a950f7331c72" kindref="member">currentClient</ref><sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>ReallocStruct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="definitions_8h_1a941fa13e3d505e5a9a3f9c082bfeff89" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8c_1a941fa13e3d505e5a9a3f9c082bfeff89" kindref="member">reallocStruct</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>st)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(st)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="definitions_8h_1a90f21d9eb37bd18237e25667fe1985bd" kindref="member">artigo</ref><sp/>=<sp/>realloc(<ref refid="definitions_8h_1a90f21d9eb37bd18237e25667fe1985bd" kindref="member">artigo</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_artigos" kindref="compound">Artigos</ref>)<sp/>*<sp/>(++<ref refid="definitions_8h_1a6a2cf8faa74cf961cf0f42b4601b364c" kindref="member">NA</ref><sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="definitions_8h_1a90f21d9eb37bd18237e25667fe1985bd" kindref="member">artigo</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="colors_8c_1a39abd40f68d03c40857be1e74407efb9" kindref="member">red</ref>();<sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>\n[!]<sp/>Erro<sp/>ao<sp/>alocar<sp/>memória<sp/>[!]\n&quot;</highlight><highlight class="normal">);<sp/><ref refid="colors_8c_1ac0fd834412eb7d5311f137d919db6788" kindref="member">white</ref>();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="definitions_8h_1aaac738b47d017c7cb9d3cd1d4c27888c" kindref="member">cliente</ref><sp/>=<sp/>realloc(<ref refid="definitions_8h_1aaac738b47d017c7cb9d3cd1d4c27888c" kindref="member">cliente</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_clientes" kindref="compound">Clientes</ref>)<sp/>*<sp/>(++<ref refid="definitions_8h_1ab4cee453adc50fdf7fed706a78903134" kindref="member">NC</ref><sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="definitions_8h_1aaac738b47d017c7cb9d3cd1d4c27888c" kindref="member">cliente</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="colors_8c_1a39abd40f68d03c40857be1e74407efb9" kindref="member">red</ref>();<sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>\n[!]<sp/>Erro<sp/>ao<sp/>alocar<sp/>memória<sp/>[!]\n&quot;</highlight><highlight class="normal">);<sp/><ref refid="colors_8c_1ac0fd834412eb7d5311f137d919db6788" kindref="member">white</ref>();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="definitions_8h_1a3c137582b2f5c552bde184eb2d023fbc" kindref="member">encomenda</ref><sp/>=<sp/>realloc(<ref refid="definitions_8h_1a3c137582b2f5c552bde184eb2d023fbc" kindref="member">encomenda</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_encomendas" kindref="compound">Encomendas</ref>)<sp/>*<sp/>(++<ref refid="definitions_8h_1ac83a8e317aabc0369638a0e4c4d3406b" kindref="member">NE</ref><sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="definitions_8h_1a3c137582b2f5c552bde184eb2d023fbc" kindref="member">encomenda</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="colors_8c_1a39abd40f68d03c40857be1e74407efb9" kindref="member">red</ref>();<sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>\n[!]<sp/>Erro<sp/>ao<sp/>alocar<sp/>memória<sp/>[!]\n&quot;</highlight><highlight class="normal">);<sp/><ref refid="colors_8c_1ac0fd834412eb7d5311f137d919db6788" kindref="member">white</ref>();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>region<sp/>FreeMemory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="definitions_8h_1a5ec3ba219271cd3cd14bf58108226c7c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util_8c_1a5ec3ba219271cd3cd14bf58108226c7c" kindref="member">freeMemory</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alsoStopTheProgram)<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>free(<ref refid="definitions_8h_1a90f21d9eb37bd18237e25667fe1985bd" kindref="member">artigo</ref>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>free(<ref refid="definitions_8h_1aaac738b47d017c7cb9d3cd1d4c27888c" kindref="member">cliente</ref>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>free(<ref refid="definitions_8h_1a3c137582b2f5c552bde184eb2d023fbc" kindref="member">encomenda</ref>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alsoStopTheProgram)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>endregion</highlight></codeline>
    </programlisting>
    <location file="util.c"/>
  </compounddef>
</doxygen>
